{"version":3,"sources":["SN-2-features/f5-chat/c1-ui/ChatPage.tsx","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectDestructuringEmpty.js"],"names":["Chat","dispatch","useDispatch","status","useSelector","state","chat","useEffect","startMessagesListening","stopMessagesListening","Messages","obj","TypeError","messages","messagesAnchorRef","useRef","useState","isAutoScroll","setIsAutoScroll","current","scrollIntoView","behavior","style","height","overflowY","onScroll","e","element","currentTarget","Math","abs","scrollHeight","scrollTop","clientHeight","map","m","index","Message","message","id","ref","React","memo","console","log","src","photo","width","userName","AddMessageForm","setMessage","onChange","value","disabled","onClick","sendMessage","withAuthRedirect"],"mappings":"mMAaMA,EAAiB,WAEnB,IAAMC,EAAWC,cACXC,EAASC,aAA0C,SAAAC,GAAK,OAAIA,EAAMC,KAAKH,UAS7E,OAPAI,qBAAU,WAEN,OADAN,EAASO,eACF,WACHP,EAASQ,kBAEd,IAEI,gCACS,UAAXN,GAAsB,8EACvB,qCACI,cAAC,EAAD,IACA,cAAC,EAAD,WAKNO,EAAyB,SAAC,IClCjB,SAAmCC,GAChD,GAAW,MAAPA,EAAa,MAAM,IAAIC,UAAU,gCDiCC,IACpC,IAAMC,EAAWT,aAAiD,SAAAC,GAAK,OAAIA,EAAMC,KAAKO,YAChFC,EAAoBC,iBAAuB,MAFd,EAGKC,oBAAS,GAHd,mBAG5BC,EAH4B,KAGdC,EAHc,KAoBnC,OANAX,qBAAU,WACa,IAAD,EAAdU,IACA,UAAAH,EAAkBK,eAAlB,SAA2BC,eAAe,CAACC,SAAU,cAE1D,CAACR,EAASI,IAEN,sBAAKK,MAAO,CAACC,OAAQ,QAASC,UAAW,QAASC,SAfnC,SAACC,GACnB,IAAMC,EAAUD,EAAEE,cACdC,KAAKC,IAAKH,EAAQI,aAAeJ,EAAQK,UAAaL,EAAQM,cAAgB,KAC7EhB,GAAgBC,GAAgB,GAEjCD,GAAgBC,GAAgB,IAUjC,UACFL,EAASqB,KAAI,SAACC,EAAGC,GAAJ,OAAc,cAACC,EAAD,CAAoBC,QAASH,GAAfA,EAAEI,OAC5C,qBAAKC,IAAK1B,QAKZuB,EAAqDI,IAAMC,MAAK,YAAgB,IAAdJ,EAAa,EAAbA,QAEpE,OADAK,QAAQC,IAAI,iBACL,gCACH,qBAAKC,IAAKP,EAAQQ,MAAOxB,MAAO,CAACyB,MAAO,UADrC,IACgD,4BAAIT,EAAQU,WAC/D,uBACCV,EAAQA,QACT,6BAKFW,EAA+B,WAAO,IAAD,EACTjC,mBAAS,IADA,mBAChCsB,EADgC,KACvBY,EADuB,KAEjCjD,EAAWC,cAEXC,EAASC,aAA0C,SAAAC,GAAK,OAAIA,EAAMC,KAAKH,UAU7E,OAAO,gCACH,8BACI,0BAAUgD,SAAU,SAACzB,GAAD,OAAOwB,EAAWxB,EAAEE,cAAcwB,QAAQA,MAAOd,MAEzE,8BACI,wBAAQe,SAAqB,UAAXlD,EAAoBmD,QAbnB,WAClBhB,IAGLrC,EAASsD,YAAYjB,IACrBY,EAAW,MAQP,wBAKGM,uBAzFY,WACvB,OAAO,8BACH,cAAC,EAAD","file":"static/js/4.f08168d3.chunk.js","sourcesContent":["import {useDispatch, useSelector} from 'react-redux';\r\nimport React, {useEffect, useRef, useState} from 'react';\r\nimport {ChatMessageAPIType, StatusType} from '../c3-dal/chat-api';\r\nimport {AppRootStateType} from '../../../SN-1-main/m2-bll/redux-store';\r\nimport {ChatMessageType, sendMessage, startMessagesListening, stopMessagesListening} from '../c2-bll/chat-reducer';\r\nimport {withAuthRedirect} from '../../../HOC/WithAuthRedirect';\r\n\r\nconst ChatPage: React.FC = () => {\r\n    return <div>\r\n        <Chat/>\r\n    </div>;\r\n};\r\n\r\nconst Chat: React.FC = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const status = useSelector<AppRootStateType, StatusType>(state => state.chat.status);\r\n\r\n    useEffect(() => {\r\n        dispatch(startMessagesListening());\r\n        return () => {\r\n            dispatch(stopMessagesListening());\r\n        };\r\n    }, []);\r\n\r\n    return <div>\r\n        {status === 'error' && <div>Some error occured. Please refresh the page</div>}\r\n        <>\r\n            <Messages/>\r\n            <AddMessageForm/>\r\n        </>\r\n    </div>;\r\n};\r\n\r\nconst Messages: React.FC<{}> = ({}) => {\r\n    const messages = useSelector<AppRootStateType, ChatMessageType[]>(state => state.chat.messages);\r\n    const messagesAnchorRef = useRef<HTMLDivElement>(null);\r\n    const [isAutoScroll, setIsAutoScroll] = useState(true);\r\n\r\n    const scrollHandler = (e: React.UIEvent<HTMLDivElement, UIEvent>) => {\r\n        const element = e.currentTarget;\r\n        if (Math.abs((element.scrollHeight - element.scrollTop) - element.clientHeight) < 300) {\r\n            !isAutoScroll && setIsAutoScroll(true);\r\n        } else {\r\n            isAutoScroll && setIsAutoScroll(false);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (isAutoScroll) {\r\n            messagesAnchorRef.current?.scrollIntoView({behavior: 'smooth'});\r\n        }\r\n    }, [messages,isAutoScroll]);\r\n\r\n    return <div style={{height: '400px', overflowY: 'auto'}} onScroll={scrollHandler}>\r\n        {messages.map((m, index) => <Message key={m.id} message={m}/>)}\r\n        <div ref={messagesAnchorRef}></div>\r\n    </div>;\r\n};\r\n\r\n\r\nconst Message: React.FC<{ message: ChatMessageAPIType }> = React.memo(({message}) => {\r\n    console.log('>>>>>>Message');\r\n    return <div>\r\n        <img src={message.photo} style={{width: '30px'}}/> <b>{message.userName}</b>\r\n        <br/>\r\n        {message.message}\r\n        <hr/>\r\n    </div>;\r\n});\r\n\r\n\r\nconst AddMessageForm: React.FC<{}> = () => {\r\n    const [message, setMessage] = useState('');\r\n    const dispatch = useDispatch();\r\n\r\n    const status = useSelector<AppRootStateType, StatusType>(state => state.chat.status);\r\n\r\n    const sendMessageHandler = () => {\r\n        if (!message) {\r\n            return;\r\n        }\r\n        dispatch(sendMessage(message));\r\n        setMessage('');\r\n    };\r\n\r\n    return <div>\r\n        <div>\r\n            <textarea onChange={(e) => setMessage(e.currentTarget.value)} value={message}/>\r\n        </div>\r\n        <div>\r\n            <button disabled={status !== 'ready'} onClick={sendMessageHandler}>Send</button>\r\n        </div>\r\n    </div>;\r\n};\r\n\r\nexport default withAuthRedirect(ChatPage);\r\n","export default function _objectDestructuringEmpty(obj) {\n  if (obj == null) throw new TypeError(\"Cannot destructure undefined\");\n}"],"sourceRoot":""}