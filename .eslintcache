[{"D:\\Education\\itcamasutra\\pathofsamurai\\src\\index.tsx":"1","D:\\Education\\itcamasutra\\pathofsamurai\\src\\App.tsx":"2","D:\\Education\\itcamasutra\\pathofsamurai\\src\\Rdux\\redux-store.tsx":"3","D:\\Education\\itcamasutra\\pathofsamurai\\src\\Rdux\\app-reducer.tsx":"4","D:\\Education\\itcamasutra\\pathofsamurai\\src\\HOC\\withSuspense.tsx":"5","D:\\Education\\itcamasutra\\pathofsamurai\\src\\components\\Nav\\Nav.tsx":"6","D:\\Education\\itcamasutra\\pathofsamurai\\src\\components\\Music\\Music.tsx":"7","D:\\Education\\itcamasutra\\pathofsamurai\\src\\components\\News\\News.tsx":"8","D:\\Education\\itcamasutra\\pathofsamurai\\src\\components\\Settings\\Settings.tsx":"9","D:\\Education\\itcamasutra\\pathofsamurai\\src\\components\\Login\\Login.tsx":"10","D:\\Education\\itcamasutra\\pathofsamurai\\src\\components\\Dialogs\\DialogsContainer.tsx":"11","D:\\Education\\itcamasutra\\pathofsamurai\\src\\components\\Profile\\ProfileContentContainerAPI.tsx":"12","D:\\Education\\itcamasutra\\pathofsamurai\\src\\components\\Header\\HeaderContainer.tsx":"13","D:\\Education\\itcamasutra\\pathofsamurai\\src\\components\\common\\preLoader\\preLoader.tsx":"14","D:\\Education\\itcamasutra\\pathofsamurai\\src\\Rdux\\dialogs-reducer.tsx":"15","D:\\Education\\itcamasutra\\pathofsamurai\\src\\Rdux\\sidebar-reducer.tsx":"16","D:\\Education\\itcamasutra\\pathofsamurai\\src\\HOC\\WithAuthRedirect.tsx":"17","D:\\Education\\itcamasutra\\pathofsamurai\\src\\components\\Profile\\ProfileContent.tsx":"18","D:\\Education\\itcamasutra\\pathofsamurai\\src\\components\\Header\\Header.tsx":"19","D:\\Education\\itcamasutra\\pathofsamurai\\src\\components\\Dialogs\\Dialogs.tsx":"20","D:\\Education\\itcamasutra\\pathofsamurai\\src\\Rdux\\profile-reducer.tsx":"21","D:\\Education\\itcamasutra\\pathofsamurai\\src\\Rdux\\auth-reducer.tsx":"22","D:\\Education\\itcamasutra\\pathofsamurai\\src\\Rdux\\users-reducer.tsx":"23","D:\\Education\\itcamasutra\\pathofsamurai\\src\\components\\Login\\LoginForm.tsx":"24","D:\\Education\\itcamasutra\\pathofsamurai\\src\\components\\Login\\reduxFormLogin\\ReduxLogin.tsx":"25","D:\\Education\\itcamasutra\\pathofsamurai\\src\\Rdux\\users-selectors.tsx":"26","D:\\Education\\itcamasutra\\pathofsamurai\\src\\API\\api-types.ts":"27","D:\\Education\\itcamasutra\\pathofsamurai\\src\\API\\security-api.ts":"28","D:\\Education\\itcamasutra\\pathofsamurai\\src\\API\\auth-api.ts":"29","D:\\Education\\itcamasutra\\pathofsamurai\\src\\API\\profile-api.ts":"30","D:\\Education\\itcamasutra\\pathofsamurai\\src\\utils\\validators\\validators.ts":"31","D:\\Education\\itcamasutra\\pathofsamurai\\src\\API\\users-api.ts":"32","D:\\Education\\itcamasutra\\pathofsamurai\\src\\components\\Profile\\MyPosts\\MyPostsContainer.tsx":"33","D:\\Education\\itcamasutra\\pathofsamurai\\src\\components\\Dialogs\\DialogItem\\DialogItem.tsx":"34","D:\\Education\\itcamasutra\\pathofsamurai\\src\\components\\Dialogs\\Message\\Message.tsx":"35","D:\\Education\\itcamasutra\\pathofsamurai\\src\\components\\common\\FormControls\\FormControls.tsx":"36","D:\\Education\\itcamasutra\\pathofsamurai\\src\\components\\Login\\reduxFormLogin\\ReduxFormLogin.tsx":"37","D:\\Education\\itcamasutra\\pathofsamurai\\src\\components\\Profile\\ProfileInfo\\ProfileInfo.tsx":"38","D:\\Education\\itcamasutra\\pathofsamurai\\src\\utils\\object-helpers\\object-helpers.tsx":"39","D:\\Education\\itcamasutra\\pathofsamurai\\src\\components\\Users\\Users.tsx":"40","D:\\Education\\itcamasutra\\pathofsamurai\\src\\API\\instance-api.ts":"41","D:\\Education\\itcamasutra\\pathofsamurai\\src\\components\\Profile\\MyPosts\\MyPosts.tsx":"42","D:\\Education\\itcamasutra\\pathofsamurai\\src\\components\\Profile\\ProfileInfo\\ProfileStatus\\ProfileStatusHooks.tsx":"43","D:\\Education\\itcamasutra\\pathofsamurai\\src\\components\\Profile\\ProfileInfo\\ProfileData\\ProfileData.tsx":"44","D:\\Education\\itcamasutra\\pathofsamurai\\src\\components\\Profile\\ProfileInfo\\ProfileDataForm\\ProfileDataForm.tsx":"45","D:\\Education\\itcamasutra\\pathofsamurai\\src\\components\\Users\\User\\UserSearchForm.tsx":"46","D:\\Education\\itcamasutra\\pathofsamurai\\src\\components\\Users\\User\\User.tsx":"47","D:\\Education\\itcamasutra\\pathofsamurai\\src\\components\\common\\Paginator\\Paginator.tsx":"48","D:\\Education\\itcamasutra\\pathofsamurai\\src\\components\\Profile\\MyPosts\\Post\\Post.tsx":"49","D:\\Education\\itcamasutra\\pathofsamurai\\src\\components\\Users\\UsersPage.tsx":"50","D:\\Education\\itcamasutra\\pathofsamurai\\src\\components\\chat\\ChatPage.tsx":"51","D:\\Education\\itcamasutra\\pathofsamurai\\src\\components\\common\\routes\\Routes.tsx":"52","D:\\Education\\itcamasutra\\pathofsamurai\\src\\components\\Header\\header-selectors.ts":"53","D:\\Education\\itcamasutra\\pathofsamurai\\src\\components\\Profile\\profile-selectors.ts":"54","D:\\Education\\itcamasutra\\pathofsamurai\\src\\components\\common\\Page404\\Page404.tsx":"55","D:\\Education\\itcamasutra\\pathofsamurai\\src\\Rdux\\chat-reducer.ts":"56","D:\\Education\\itcamasutra\\pathofsamurai\\src\\API\\chat-api.ts":"57"},{"size":397,"mtime":1609943254604,"results":"58","hashOfConfig":"59"},{"size":3566,"mtime":1610012095309,"results":"60","hashOfConfig":"59"},{"size":1099,"mtime":1609952012930,"results":"61","hashOfConfig":"59"},{"size":1087,"mtime":1608479445936,"results":"62","hashOfConfig":"59"},{"size":274,"mtime":1609342389437,"results":"63","hashOfConfig":"59"},{"size":2364,"mtime":1610011686152,"results":"64","hashOfConfig":"59"},{"size":143,"mtime":1591296224320,"results":"65","hashOfConfig":"59"},{"size":159,"mtime":1591296266128,"results":"66","hashOfConfig":"59"},{"size":147,"mtime":1591296213464,"results":"67","hashOfConfig":"59"},{"size":219,"mtime":1606247625937,"results":"68","hashOfConfig":"59"},{"size":821,"mtime":1609170913822,"results":"69","hashOfConfig":"59"},{"size":4134,"mtime":1609943254591,"results":"70","hashOfConfig":"59"},{"size":831,"mtime":1609784230146,"results":"71","hashOfConfig":"72"},{"size":657,"mtime":1609782917597,"results":"73","hashOfConfig":"59"},{"size":1414,"mtime":1609171219579,"results":"74","hashOfConfig":"59"},{"size":157,"mtime":1598296201424,"results":"75","hashOfConfig":"59"},{"size":873,"mtime":1609343509135,"results":"76","hashOfConfig":"59"},{"size":1323,"mtime":1609943254589,"results":"77","hashOfConfig":"59"},{"size":928,"mtime":1610011113528,"results":"78","hashOfConfig":"59"},{"size":2380,"mtime":1609354275951,"results":"79","hashOfConfig":"59"},{"size":4823,"mtime":1609943254584,"results":"80","hashOfConfig":"59"},{"size":3577,"mtime":1609782917587,"results":"81","hashOfConfig":"59"},{"size":5212,"mtime":1609782917589,"results":"82","hashOfConfig":"59"},{"size":4683,"mtime":1609943254587,"results":"83","hashOfConfig":"59"},{"size":319,"mtime":1608469175109,"results":"84","hashOfConfig":"72"},{"size":1141,"mtime":1609789126738,"results":"85","hashOfConfig":"59"},{"size":590,"mtime":1608484621480,"results":"86","hashOfConfig":"59"},{"size":185,"mtime":1608482971468,"results":"87","hashOfConfig":"59"},{"size":707,"mtime":1608484621484,"results":"88","hashOfConfig":"59"},{"size":1179,"mtime":1608484641229,"results":"89","hashOfConfig":"59"},{"size":382,"mtime":1608486146910,"results":"90","hashOfConfig":"59"},{"size":863,"mtime":1609782917585,"results":"91","hashOfConfig":"59"},{"size":574,"mtime":1609352385594,"results":"92","hashOfConfig":"59"},{"size":431,"mtime":1609354311224,"results":"93","hashOfConfig":"59"},{"size":280,"mtime":1609354234842,"results":"94","hashOfConfig":"59"},{"size":1834,"mtime":1608653345282,"results":"95","hashOfConfig":"59"},{"size":1568,"mtime":1608653194344,"results":"96","hashOfConfig":"72"},{"size":2110,"mtime":1609782917593,"results":"97","hashOfConfig":"59"},{"size":262,"mtime":1607258344422,"results":"98","hashOfConfig":"59"},{"size":3626,"mtime":1609943254600,"results":"99","hashOfConfig":"59"},{"size":248,"mtime":1608467265520,"results":"100","hashOfConfig":"59"},{"size":2552,"mtime":1609943254588,"results":"101","hashOfConfig":"59"},{"size":1184,"mtime":1609352799232,"results":"102","hashOfConfig":"59"},{"size":1568,"mtime":1609350397067,"results":"103","hashOfConfig":"59"},{"size":2148,"mtime":1609350948878,"results":"104","hashOfConfig":"59"},{"size":2060,"mtime":1609943254598,"results":"105","hashOfConfig":"59"},{"size":2337,"mtime":1609943254597,"results":"106","hashOfConfig":"59"},{"size":1767,"mtime":1609783759349,"results":"107","hashOfConfig":"59"},{"size":1416,"mtime":1609943254589,"results":"108","hashOfConfig":"59"},{"size":550,"mtime":1609787012168,"results":"109","hashOfConfig":"59"},{"size":3031,"mtime":1609952248452,"results":"110","hashOfConfig":"59"},{"size":1873,"mtime":1609943254603,"results":"111","hashOfConfig":"59"},{"size":163,"mtime":1609943254587,"results":"112","hashOfConfig":"59"},{"size":544,"mtime":1609943254596,"results":"113","hashOfConfig":"59"},{"size":301,"mtime":1609943254602,"results":"114","hashOfConfig":"59"},{"size":2864,"mtime":1610008609345,"results":"115","hashOfConfig":"59"},{"size":2680,"mtime":1609951765185,"results":"116","hashOfConfig":"59"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},"170p5op",{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"119"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"146"},"i6j4r6",{"filePath":"147","messages":"148","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"119"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"119"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"203","usedDeprecatedRules":"119"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"216","usedDeprecatedRules":"119"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"227","usedDeprecatedRules":"119"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},"D:\\Education\\itcamasutra\\pathofsamurai\\src\\index.tsx",[],["240","241"],"D:\\Education\\itcamasutra\\pathofsamurai\\src\\App.tsx",[],"D:\\Education\\itcamasutra\\pathofsamurai\\src\\Rdux\\redux-store.tsx",[],"D:\\Education\\itcamasutra\\pathofsamurai\\src\\Rdux\\app-reducer.tsx",[],"D:\\Education\\itcamasutra\\pathofsamurai\\src\\HOC\\withSuspense.tsx",[],"D:\\Education\\itcamasutra\\pathofsamurai\\src\\components\\Nav\\Nav.tsx",[],"D:\\Education\\itcamasutra\\pathofsamurai\\src\\components\\Music\\Music.tsx",[],"D:\\Education\\itcamasutra\\pathofsamurai\\src\\components\\News\\News.tsx",[],"D:\\Education\\itcamasutra\\pathofsamurai\\src\\components\\Settings\\Settings.tsx",[],"D:\\Education\\itcamasutra\\pathofsamurai\\src\\components\\Login\\Login.tsx",[],"D:\\Education\\itcamasutra\\pathofsamurai\\src\\components\\Dialogs\\DialogsContainer.tsx",[],"D:\\Education\\itcamasutra\\pathofsamurai\\src\\components\\Profile\\ProfileContentContainerAPI.tsx",["242","243","244","245","246","247","248","249","250","251"],"import React, {useCallback, useEffect} from 'react';\r\nimport '../../App.css';\r\nimport {connect, useDispatch, useSelector} from 'react-redux';\r\nimport {getUserProfile, getUserStatus, savePhoto, saveProfile, updateUserStatus} from '../../Rdux/profile-reducer';\r\nimport {RouteComponentProps, useParams, withRouter} from 'react-router-dom';\r\nimport {compose} from 'redux';\r\nimport {AppRootStateType} from '../../Rdux/redux-store';\r\nimport {NewProfileType} from '../../Types/Types';\r\nimport {Profile} from './ProfileContent';\r\nimport {getIsAuth, getProfile, getStatus, getUserId} from './profile-selectors';\r\nimport {withAuthRedirect} from '../../HOC/WithAuthRedirect';\r\n\r\n\r\ntype MapPropsType = ReturnType<typeof mapStateToProps>\r\ntype DispatchPropsType = {\r\n    getUserProfile: (userId: number | null) => void\r\n    getUserStatus: (userId: number | null) => void\r\n    updateUserStatus: (status: string) => void\r\n    savePhoto: (file: File) => void\r\n    saveProfile: (profile: NewProfileType) => Promise<any>\r\n}\r\n\r\ntype PathParamsType = {\r\n    userId: string\r\n\r\n}\r\n\r\n\r\ntype PropsType = MapPropsType & DispatchPropsType & RouteComponentProps<PathParamsType>;\r\n\r\ntype HooksType = {}\r\nconst ProfileHooks: React.FC<HooksType> = (props) => {\r\n    const {id} = useParams<{ id: string }>()\r\n    const dispatch = useDispatch();\r\n    const profile = useSelector(getProfile)\r\n    const status = useSelector(getStatus)\r\n    const isAuth = useSelector(getIsAuth)\r\n    const authorizedUserId = useSelector(getUserId)\r\n\r\n    const getUserProfile = useCallback((userId: number | null) => {\r\n        dispatch(getUserProfile(userId))\r\n    }, [dispatch])\r\n    const getUserStatus = useCallback((userId: number | null) => {\r\n        dispatch(getUserStatus(userId))\r\n    }, [dispatch])\r\n    const updateUserStatus = useCallback((status: string) => {\r\n        dispatch(updateUserStatus(status))\r\n    }, [dispatch])\r\n    const savePhoto = useCallback((photo: File) => {\r\n        dispatch(savePhoto(photo))\r\n    }, [])\r\n    const saveProfile = useCallback(async (profile: NewProfileType): Promise<any> => {\r\n        await dispatch(saveProfile(profile))\r\n    }, [])\r\n\r\n\r\n    useEffect(() => {\r\n    }, [])\r\n\r\n\r\n    return (\r\n        <div>\r\n\r\n\r\n        </div>);\r\n\r\n}\r\n\r\n\r\nclass ProfileContentContainerAPI extends React.Component<PropsType> {\r\n    constructor(props: PropsType) {\r\n        super(props);\r\n    }\r\n\r\n    refreshProfile() {\r\n        let userId: number | null = +this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n            if (!userId) {\r\n                this.props.history.push('/login');\r\n            }\r\n        }\r\n\r\n        if (!userId) {\r\n            console.error('ID should exists in URI params or in state (\\'authorizedUserId\\')');\r\n        } else {\r\n            this.props.getUserProfile(userId);\r\n            this.props.getUserStatus(userId);\r\n        }\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n\r\n        this.refreshProfile();\r\n    }\r\n\r\n    componentDidUpdate(prevProps: PropsType, prevState: PropsType) {\r\n        if (this.props.match.params.userId != prevProps.match.params.userId) {\r\n            this.refreshProfile();\r\n        }\r\n\r\n    }\r\n\r\n    componentWillUnmount(): void {\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Profile\r\n                    {...this.props}\r\n                    isOwner={!this.props.match.params.userId}\r\n                    profile={this.props.profile}\r\n                    status={this.props.status}\r\n                    updateStatus={this.props.updateUserStatus}\r\n                />\r\n\r\n            </div>);\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state: AppRootStateType) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    isAuth: state.auth.isAuth,\r\n    authorizedUserId: state.auth.userId,\r\n\r\n\r\n});\r\n\r\n\r\nexport default compose<React.ComponentType>(\r\n    connect(mapStateToProps, {\r\n        getUserProfile,\r\n        getUserStatus,\r\n        updateUserStatus,\r\n        savePhoto,\r\n        saveProfile\r\n    }),\r\n    withRouter,\r\n    withAuthRedirect\r\n)(ProfileContentContainerAPI);\r\n\r\n\r\n","D:\\Education\\itcamasutra\\pathofsamurai\\src\\components\\Header\\HeaderContainer.tsx",["252","253"],"import React from 'react';\r\nimport Header, {DispatchHeaderPropsType, HeaderPropsType} from './Header';\r\nimport {connect} from 'react-redux';\r\nimport {logoutTC} from '../../Rdux/auth-reducer';\r\nimport {withRouter} from 'react-router-dom';\r\nimport {AppRootStateType} from '../../Rdux/redux-store';\r\nimport {compose} from 'redux';\r\n\r\n\r\nclass HeaderContainer extends React.Component<HeaderPropsType & DispatchHeaderPropsType> {\r\n    render() {\r\n        return <Header {...this.props}/>;\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: AppRootStateType) => (\r\n    {\r\n        isAuth: state.auth.isAuth,\r\n        login: state.auth.login,\r\n    });\r\n\r\nexport default compose<React.ComponentType>(\r\n    connect<HeaderPropsType, DispatchHeaderPropsType, {}, AppRootStateType>(mapStateToProps, {logoutTC}),\r\n    withRouter,\r\n)(HeaderContainer);\r\n",["254","255"],"D:\\Education\\itcamasutra\\pathofsamurai\\src\\components\\common\\preLoader\\preLoader.tsx",["256","257","258"],"import {Field, Form, Formik} from 'formik';\r\nimport React from 'react';\r\nimport st from './preLoader.module.css';\r\n\r\n\r\nconst PreLoader: React.FC = () => {\r\n    return <div className={st.loader}>\r\n        <div className={st.l_main}>\r\n            <div className={st.l_square}><span></span><span></span><span></span></div>\r\n            <div className={st.l_square}><span></span><span></span><span></span></div>\r\n            <div className={st.l_square}><span></span><span></span><span></span></div>\r\n            <div className={st.l_square}><span></span><span></span><span></span></div>\r\n\r\n        </div>\r\n    </div>;\r\n\r\n};\r\n\r\n\r\n\r\n\r\nexport default PreLoader;\r\n","D:\\Education\\itcamasutra\\pathofsamurai\\src\\Rdux\\dialogs-reducer.tsx",[],"D:\\Education\\itcamasutra\\pathofsamurai\\src\\Rdux\\sidebar-reducer.tsx",[],"D:\\Education\\itcamasutra\\pathofsamurai\\src\\HOC\\WithAuthRedirect.tsx",[],"D:\\Education\\itcamasutra\\pathofsamurai\\src\\components\\Profile\\ProfileContent.tsx",[],"D:\\Education\\itcamasutra\\pathofsamurai\\src\\components\\Header\\Header.tsx",[],"D:\\Education\\itcamasutra\\pathofsamurai\\src\\components\\Dialogs\\Dialogs.tsx",[],"D:\\Education\\itcamasutra\\pathofsamurai\\src\\Rdux\\profile-reducer.tsx",[],"D:\\Education\\itcamasutra\\pathofsamurai\\src\\Rdux\\auth-reducer.tsx",[],"D:\\Education\\itcamasutra\\pathofsamurai\\src\\Rdux\\users-reducer.tsx",[],"D:\\Education\\itcamasutra\\pathofsamurai\\src\\components\\Login\\LoginForm.tsx",["259"],"import React from 'react';\r\nimport {\r\n    Button,\r\n    Checkbox,\r\n    FormControl,\r\n    FormControlLabel,\r\n    FormGroup,\r\n    FormLabel,\r\n    Grid,\r\n    TextField\r\n} from '@material-ui/core';\r\nimport {useFormik} from 'formik';\r\nimport {loginTC} from '../../Rdux/auth-reducer';\r\nimport {connect} from 'react-redux';\r\nimport {AppRootStateType} from '../../Rdux/redux-store';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {LoginParamsType} from '../../API/api-types';\r\n\r\n// TODO сделать проверку правильности пароля\r\n\r\ntype LoginFormType = {\r\n    loginTC: (data: LoginParamsType) => Promise<any>\r\n    isCorrect: boolean\r\n    isAuth: boolean\r\n    captchaUrl: string | null\r\n}\r\n\r\n\r\nconst LoginForm: React.FC<LoginFormType> = ({isAuth, isCorrect, loginTC, captchaUrl}) => {\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            email: '',\r\n            password: '',\r\n            rememberMe: false,\r\n            isCorrect: isCorrect,\r\n            confirm: ''\r\n        }, validate(values: FormikType) {\r\n            const errors: FormikType = {};\r\n\r\n            if (!values.email) {\r\n                errors.email = 'Required';\r\n            } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\r\n                errors.email = 'Invalid email address';\r\n            }\r\n            if (!values.password) {\r\n                errors.password = 'Required';\r\n            } else if (values.password.length < 5) {\r\n                errors.password = 'Must be 5 characters or more';\r\n            }\r\n            if (!values.isCorrect) {\r\n                errors.confirm = 'Incorrect email or password';\r\n            }\r\n\r\n            return errors;\r\n        },\r\n\r\n        onSubmit: async (values) => {\r\n            await loginTC(values);\r\n\r\n        },\r\n    });\r\n    // useEffect(() => {\r\n    //     !isCorrect && formik.setErrors({confirm: 'Incorrect email or password'});\r\n    // }, [isCorrect]);\r\n    if (isAuth) {\r\n        return <Redirect to={'/profile'}/>;\r\n    }\r\n    //TODO доделать отправку капчи\r\n    return <form onSubmit={formik.handleSubmit}>\r\n        <Grid container justify=\"center\">\r\n            <Grid item xs={4}>\r\n                <FormControl>\r\n                    <FormLabel>\r\n                        <p>To log in get registered\r\n                            <a href={'https://social-network.samuraijs.com/'}\r\n                               target={'_blank'}>here\r\n                            </a>\r\n                        </p>\r\n                        <p>or use common test account credentials:</p>\r\n                        <p>Email: free@samuraijs.com</p>\r\n                        <p>Password: free</p>\r\n                    </FormLabel>\r\n                    <FormGroup>\r\n                        <TextField\r\n                            label=\"Email\"\r\n                            margin=\"normal\"\r\n                            {...formik.getFieldProps('email')}\r\n                        />{\r\n                        formik.errors.email ? <div style={{color: 'red'}}>{formik.errors.email}</div> : null\r\n                    }\r\n                        <TextField\r\n                            type=\"password\"\r\n                            label=\"Password\"\r\n                            margin=\"normal\"\r\n                            {...formik.getFieldProps('password')}\r\n                        />{\r\n                        formik.errors.password ? <div style={{color: 'red'}}>{formik.errors.password}</div> : null\r\n                    }\r\n\r\n                        {\r\n                            formik.errors.confirm ? <div style={{color: 'red'}}>{formik.errors.confirm}</div> : null\r\n                        }\r\n                        <FormControlLabel\r\n                            label={'Remember me'}\r\n                            control={<Checkbox/>}\r\n                            {...formik.getFieldProps('rememberMe')}\r\n                        />\r\n                        <Button type={'submit'} variant={'contained'} color={'primary'}>Login</Button>\r\n                    </FormGroup>\r\n                </FormControl>\r\n            </Grid>\r\n        </Grid>\r\n    </form>;\r\n\r\n\r\n};\r\n\r\n\r\nconst mapStateToProps = (state: AppRootStateType): MapStatePropsType => ({\r\n    isAuth: state.auth.isAuth,\r\n    isCorrect: state.auth.isCorrect,\r\n    captchaUrl: state.auth.captchaUrl\r\n\r\n});\r\ntype MapStatePropsType = {\r\n    isAuth: boolean\r\n    isCorrect: boolean\r\n    captchaUrl: string | null\r\n\r\n}\r\ntype FormikType = {\r\n    email?: string\r\n    password?: string\r\n    rememberMe?: boolean\r\n    isCorrect?: boolean\r\n    confirm?: string\r\n}\r\nexport default connect(mapStateToProps, {loginTC})(LoginForm);\r\n","D:\\Education\\itcamasutra\\pathofsamurai\\src\\components\\Login\\reduxFormLogin\\ReduxLogin.tsx",[],"D:\\Education\\itcamasutra\\pathofsamurai\\src\\Rdux\\users-selectors.tsx",[],"D:\\Education\\itcamasutra\\pathofsamurai\\src\\API\\api-types.ts",[],"D:\\Education\\itcamasutra\\pathofsamurai\\src\\API\\security-api.ts",[],"D:\\Education\\itcamasutra\\pathofsamurai\\src\\API\\auth-api.ts",[],"D:\\Education\\itcamasutra\\pathofsamurai\\src\\API\\profile-api.ts",[],"D:\\Education\\itcamasutra\\pathofsamurai\\src\\utils\\validators\\validators.ts",[],"D:\\Education\\itcamasutra\\pathofsamurai\\src\\API\\users-api.ts",[],"D:\\Education\\itcamasutra\\pathofsamurai\\src\\components\\Profile\\MyPosts\\MyPostsContainer.tsx",[],"D:\\Education\\itcamasutra\\pathofsamurai\\src\\components\\Dialogs\\DialogItem\\DialogItem.tsx",[],"D:\\Education\\itcamasutra\\pathofsamurai\\src\\components\\Dialogs\\Message\\Message.tsx",[],"D:\\Education\\itcamasutra\\pathofsamurai\\src\\components\\common\\FormControls\\FormControls.tsx",[],"D:\\Education\\itcamasutra\\pathofsamurai\\src\\components\\Login\\reduxFormLogin\\ReduxFormLogin.tsx",["260"],"D:\\Education\\itcamasutra\\pathofsamurai\\src\\components\\Profile\\ProfileInfo\\ProfileInfo.tsx",[],"D:\\Education\\itcamasutra\\pathofsamurai\\src\\utils\\object-helpers\\object-helpers.tsx",[],"D:\\Education\\itcamasutra\\pathofsamurai\\src\\components\\Users\\Users.tsx",["261","262","263","264"],"import React, {useCallback, useEffect} from 'react';\r\nimport {userType} from '../../Types/Types';\r\nimport Paginator from '../common/Paginator/Paginator';\r\nimport User from './User/User';\r\nimport {FilterType, followTC, getUsersTC, unfollowTC} from '../../Rdux/users-reducer';\r\nimport {UserSearchForm} from './User/UserSearchForm';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {\r\n    getCurrentPage,\r\n    getFollowingInProgress,\r\n    getPageSize,\r\n    getTotalUsers,\r\n    getUsers,\r\n    getUsersFilter\r\n} from '../../Rdux/users-selectors';\r\nimport {useHistory} from 'react-router-dom';\r\nimport * as queryString from 'querystring';\r\n\r\n\r\ntype PropsType = {}\r\ntype QueryParamsType = { term?: string; page?: string; friend?: string }\r\nexport const Users: React.FC<PropsType> = (props) => {\r\n    const dispatch = useDispatch();\r\n    const totalUsersCount = useSelector(getTotalUsers);\r\n    const currentPage = useSelector(getCurrentPage);\r\n    const pageSize = useSelector(getPageSize);\r\n    const followingInProgress = useSelector(getFollowingInProgress);\r\n    const users = useSelector(getUsers);\r\n    const filter = useSelector(getUsersFilter);\r\n\r\n    const history = useHistory()\r\n    useEffect(() => {\r\n        const parsed = queryString.parse(history.location.search.substr(1)) as QueryParamsType\r\n\r\n        let actualPage = currentPage\r\n        let actualFilter = filter\r\n\r\n        if (!!parsed.page) actualPage = Number(parsed.page)\r\n\r\n\r\n        if (!!parsed.term) actualFilter = {...actualFilter, term: parsed.term as string}\r\n\r\n        switch (parsed.friend) {\r\n            case 'null':\r\n                actualFilter = {...actualFilter, friend: null}\r\n                break;\r\n            case 'true':\r\n                actualFilter = {...actualFilter, friend: true}\r\n                break;\r\n            case 'false':\r\n                actualFilter = {...actualFilter, friend: false}\r\n                break;\r\n        }\r\n\r\n        dispatch(getUsersTC(actualPage, pageSize, actualFilter))\r\n    }, [])\r\n    useEffect(() => {\r\n        const query: QueryParamsType = {}\r\n\r\n        if (!!filter.term) query.term = filter.term\r\n        if (filter.friend !== null) query.friend = String(filter.friend)\r\n        if (currentPage !== 1) query.page = String(currentPage)\r\n\r\n        history.push({\r\n            pathname: '/users',\r\n            search: queryString.stringify(query)\r\n        })\r\n    }, [filter, currentPage])\r\n\r\n    const onPageChanged = useCallback((pageNumber: number) => {\r\n        dispatch(getUsersTC(pageNumber, pageSize, filter));\r\n        console.log('onPageChanged')\r\n    }, [dispatch]);\r\n\r\n    const onFilterChanged = useCallback((filter: FilterType) => {\r\n        dispatch(getUsersTC(1, pageSize, filter));\r\n        console.log('onFilterChanged')\r\n    }, [dispatch]);\r\n\r\n    const follow = useCallback((userId: number) => {\r\n        dispatch(followTC(userId));\r\n        console.log('follow')\r\n    }, [dispatch]);\r\n\r\n    const unfollow = useCallback((userId: number) => {\r\n        dispatch(unfollowTC(userId));\r\n        console.log('unfollow')\r\n    }, [dispatch]);\r\n\r\n    return (\r\n        <div>\r\n            <UserSearchForm onFilterChanged={onFilterChanged}/>\r\n            <Paginator currentPage={currentPage} onPageChanged={onPageChanged} pageSize={pageSize}\r\n                       totalUsersCount={totalUsersCount}/>\r\n            {users.map((user: userType) => <User\r\n                unfollowTC={unfollow}\r\n                followTC={follow}\r\n                followingInProgress={followingInProgress}\r\n                user={user}\r\n                key={user.id}/>)}\r\n\r\n        </div>);\r\n};\r\n\r\n\r\n","D:\\Education\\itcamasutra\\pathofsamurai\\src\\API\\instance-api.ts",[],"D:\\Education\\itcamasutra\\pathofsamurai\\src\\components\\Profile\\MyPosts\\MyPosts.tsx",[],"D:\\Education\\itcamasutra\\pathofsamurai\\src\\components\\Profile\\ProfileInfo\\ProfileStatus\\ProfileStatusHooks.tsx",[],"D:\\Education\\itcamasutra\\pathofsamurai\\src\\components\\Profile\\ProfileInfo\\ProfileData\\ProfileData.tsx",[],"D:\\Education\\itcamasutra\\pathofsamurai\\src\\components\\Profile\\ProfileInfo\\ProfileDataForm\\ProfileDataForm.tsx",[],"D:\\Education\\itcamasutra\\pathofsamurai\\src\\components\\Users\\User\\UserSearchForm.tsx",["265","266"],"import {Field, Form, Formik} from 'formik';\r\nimport React from 'react';\r\nimport {FilterType, getUsersTC} from '../../../Rdux/users-reducer';\r\nimport {useSelector} from 'react-redux';\r\nimport {getUsers, getUsersFilter} from '../../../Rdux/users-selectors';\r\n\r\ntype FriendFormType = 'true' | 'false' | 'null'\r\n\r\ntype FormType = {\r\n    term: string\r\n    friend: 'true' | 'false' | 'null'\r\n}\r\ntype PropsType = {\r\n    onFilterChanged: (filter: FilterType) => void\r\n}\r\n\r\nconst usersSearchFormValidate = (values: any) => {\r\n    const errors = {};\r\n    return errors\r\n}\r\n\r\nexport const UserSearchForm: React.FC<PropsType> = React.memo(({onFilterChanged}) => {\r\n\r\n    const filter = useSelector(getUsersFilter)\r\n    const submit = (values: FormType, {setSubmitting}: { setSubmitting: (isSubmitting: boolean) => void }) => {\r\n        const filter: FilterType = {\r\n            term: values.term,\r\n            friend: values.friend === 'null' ? null : values.friend === 'true' ? true : false\r\n        }\r\n        onFilterChanged(filter)\r\n\r\n        setSubmitting(false)\r\n    }\r\n    return <div>\r\n        <Formik\r\n            initialValues={{term: filter.term, friend: String(filter.friend) as FriendFormType}}\r\n            validate={usersSearchFormValidate}\r\n            onSubmit={submit}\r\n        >\r\n            {({isSubmitting}) => (\r\n                <Form>\r\n                    <Field\r\n                        id=\"term\"\r\n                        name=\"term\"\r\n                        type=\"text\"\r\n                    />\r\n                    <Field\r\n                        component=\"select\"\r\n                        id=\"location\"\r\n                        name=\"friend\"\r\n\r\n                    >\r\n                        <option value=\"null\">All</option>\r\n                        <option value=\"true\">Only followed</option>\r\n                        <option value=\"false\">Only unfollowed</option>\r\n                    </Field>\r\n                    <button type=\"submit\" disabled={isSubmitting}>Submit</button>\r\n                </Form>)}\r\n        </Formik>\r\n    </div>\r\n})\r\n\r\n","D:\\Education\\itcamasutra\\pathofsamurai\\src\\components\\Users\\User\\User.tsx",[],"D:\\Education\\itcamasutra\\pathofsamurai\\src\\components\\common\\Paginator\\Paginator.tsx",[],"D:\\Education\\itcamasutra\\pathofsamurai\\src\\components\\Profile\\MyPosts\\Post\\Post.tsx",[],"D:\\Education\\itcamasutra\\pathofsamurai\\src\\components\\Users\\UsersPage.tsx",[],"D:\\Education\\itcamasutra\\pathofsamurai\\src\\components\\chat\\ChatPage.tsx",["267","268","269","270"],"import {useDispatch, useSelector} from 'react-redux';\r\nimport React, {useEffect, useRef, useState} from 'react';\r\nimport {AppRootStateType} from '../../Rdux/redux-store';\r\nimport {ChatMessageType, sendMessage, startMessagesListening, stopMessagesListening} from '../../Rdux/chat-reducer';\r\nimport {ChatMessageAPIType, StatusType} from '../../API/chat-api';\r\n\r\nconst ChatPage: React.FC = () => {\r\n    return <div>\r\n        <Chat/>\r\n    </div>;\r\n};\r\n\r\nconst Chat: React.FC = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n\r\n    const status = useSelector<AppRootStateType, StatusType>(state => state.chat.status);\r\n\r\n    useEffect(() => {\r\n        dispatch(startMessagesListening());\r\n        return () => {\r\n            dispatch(stopMessagesListening());\r\n        };\r\n    }, []);\r\n\r\n    return <div>\r\n        {status === 'error' && <div>Some error occured. Please refresh the page</div>}\r\n        <>\r\n            <Messages/>\r\n            <AddMessageForm/>\r\n        </>\r\n    </div>;\r\n};\r\n\r\nconst Messages: React.FC<{}> = ({}) => {\r\n    const messages = useSelector<AppRootStateType, ChatMessageType[]>(state => state.chat.messages);\r\n    const messagesAnchorRef = useRef<HTMLDivElement>(null);\r\n    const [isAutoScroll, setIsAutoScroll] = useState(true);\r\n\r\n    const scrollHandler = (e: React.UIEvent<HTMLDivElement, UIEvent>) => {\r\n        const element = e.currentTarget;\r\n        if (Math.abs((element.scrollHeight - element.scrollTop) - element.clientHeight) < 300) {\r\n            !isAutoScroll && setIsAutoScroll(true);\r\n        } else {\r\n            isAutoScroll && setIsAutoScroll(false);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (isAutoScroll) {\r\n            messagesAnchorRef.current?.scrollIntoView({behavior: 'smooth'});\r\n        }\r\n    }, [messages]);\r\n\r\n    return <div style={{height: '400px', overflowY: 'auto'}} onScroll={scrollHandler}>\r\n        {messages.map((m, index) => <Message key={m.id} message={m}/>)}\r\n        <div ref={messagesAnchorRef}></div>\r\n    </div>;\r\n};\r\n\r\n\r\nconst Message: React.FC<{ message: ChatMessageAPIType }> = React.memo(({message}) => {\r\n    console.log('>>>>>>Message');\r\n    return <div>\r\n        <img src={message.photo} style={{width: '30px'}}/> <b>{message.userName}</b>\r\n        <br/>\r\n        {message.message}\r\n        <hr/>\r\n    </div>;\r\n});\r\n\r\n\r\nconst AddMessageForm: React.FC<{}> = () => {\r\n    const [message, setMessage] = useState('');\r\n    const dispatch = useDispatch();\r\n\r\n    const status = useSelector<AppRootStateType, StatusType>(state => state.chat.status);\r\n\r\n\r\n    const sendMessageHandler = () => {\r\n        if (!message) {\r\n            return;\r\n        }\r\n        dispatch(sendMessage(message));\r\n        setMessage('');\r\n    };\r\n\r\n    return <div>\r\n        <div>\r\n            <textarea onChange={(e) => setMessage(e.currentTarget.value)} value={message}/>\r\n        </div>\r\n        <div>\r\n            <button disabled={status !== 'ready'} onClick={sendMessageHandler}>Send</button>\r\n        </div>\r\n    </div>;\r\n};\r\n\r\nexport default ChatPage;\r\n","D:\\Education\\itcamasutra\\pathofsamurai\\src\\components\\common\\routes\\Routes.tsx",[],"D:\\Education\\itcamasutra\\pathofsamurai\\src\\components\\Header\\header-selectors.ts",[],"D:\\Education\\itcamasutra\\pathofsamurai\\src\\components\\Profile\\profile-selectors.ts",[],"D:\\Education\\itcamasutra\\pathofsamurai\\src\\components\\common\\Page404\\Page404.tsx",[],"D:\\Education\\itcamasutra\\pathofsamurai\\src\\Rdux\\chat-reducer.ts",[],"D:\\Education\\itcamasutra\\pathofsamurai\\src\\API\\chat-api.ts",[],{"ruleId":"271","replacedBy":"272"},{"ruleId":"273","replacedBy":"274"},{"ruleId":"275","severity":1,"message":"276","line":32,"column":7,"nodeType":"277","messageId":"278","endLine":32,"endColumn":40},{"ruleId":"275","severity":1,"message":"279","line":33,"column":12,"nodeType":"277","messageId":"278","endLine":33,"endColumn":14},{"ruleId":"275","severity":1,"message":"280","line":35,"column":11,"nodeType":"277","messageId":"278","endLine":35,"endColumn":18},{"ruleId":"275","severity":1,"message":"281","line":36,"column":11,"nodeType":"277","messageId":"278","endLine":36,"endColumn":17},{"ruleId":"275","severity":1,"message":"282","line":37,"column":11,"nodeType":"277","messageId":"278","endLine":37,"endColumn":17},{"ruleId":"275","severity":1,"message":"283","line":38,"column":11,"nodeType":"277","messageId":"278","endLine":38,"endColumn":27},{"ruleId":"284","severity":1,"message":"285","line":51,"column":8,"nodeType":"286","endLine":51,"endColumn":10,"suggestions":"287"},{"ruleId":"284","severity":1,"message":"285","line":54,"column":8,"nodeType":"286","endLine":54,"endColumn":10,"suggestions":"288"},{"ruleId":"289","severity":1,"message":"290","line":71,"column":5,"nodeType":"291","messageId":"292","endLine":73,"endColumn":6},{"ruleId":"293","severity":1,"message":"294","line":99,"column":44,"nodeType":"295","messageId":"296","endLine":99,"endColumn":46},{"ruleId":"275","severity":1,"message":"297","line":10,"column":6,"nodeType":"277","messageId":"278","endLine":10,"endColumn":20},{"ruleId":"275","severity":1,"message":"298","line":15,"column":6,"nodeType":"277","messageId":"278","endLine":15,"endColumn":25},{"ruleId":"271","replacedBy":"299"},{"ruleId":"273","replacedBy":"300"},{"ruleId":"275","severity":1,"message":"301","line":1,"column":9,"nodeType":"277","messageId":"278","endLine":1,"endColumn":14},{"ruleId":"275","severity":1,"message":"302","line":1,"column":16,"nodeType":"277","messageId":"278","endLine":1,"endColumn":20},{"ruleId":"275","severity":1,"message":"303","line":1,"column":22,"nodeType":"277","messageId":"278","endLine":1,"endColumn":28},{"ruleId":"304","severity":1,"message":"305","line":76,"column":29,"nodeType":"306","endLine":77,"endColumn":50},{"ruleId":"307","severity":1,"message":"308","line":26,"column":32,"nodeType":"306","endLine":26,"endColumn":55},{"ruleId":"284","severity":1,"message":"309","line":56,"column":8,"nodeType":"286","endLine":56,"endColumn":10,"suggestions":"310"},{"ruleId":"284","severity":1,"message":"311","line":68,"column":8,"nodeType":"286","endLine":68,"endColumn":29,"suggestions":"312"},{"ruleId":"284","severity":1,"message":"313","line":73,"column":8,"nodeType":"286","endLine":73,"endColumn":18,"suggestions":"314"},{"ruleId":"284","severity":1,"message":"315","line":78,"column":8,"nodeType":"286","endLine":78,"endColumn":18,"suggestions":"316"},{"ruleId":"275","severity":1,"message":"317","line":3,"column":21,"nodeType":"277","messageId":"278","endLine":3,"endColumn":31},{"ruleId":"275","severity":1,"message":"318","line":5,"column":9,"nodeType":"277","messageId":"278","endLine":5,"endColumn":17},{"ruleId":"284","severity":1,"message":"319","line":25,"column":8,"nodeType":"286","endLine":25,"endColumn":10,"suggestions":"320"},{"ruleId":"321","severity":1,"message":"322","line":36,"column":33,"nodeType":"323","messageId":"296","endLine":36,"endColumn":35},{"ruleId":"284","severity":1,"message":"324","line":54,"column":8,"nodeType":"286","endLine":54,"endColumn":18,"suggestions":"325"},{"ruleId":"307","severity":1,"message":"308","line":66,"column":9,"nodeType":"306","endLine":66,"endColumn":59},"no-native-reassign",["326"],"no-negated-in-lhs",["327"],"@typescript-eslint/no-unused-vars","'ProfileHooks' is assigned a value but never used.","Identifier","unusedVar","'id' is assigned a value but never used.","'profile' is assigned a value but never used.","'status' is assigned a value but never used.","'isAuth' is assigned a value but never used.","'authorizedUserId' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useCallback has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["328"],["329"],"@typescript-eslint/no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'PathParamsType' is defined but never used.","'mapStateToPropsType' is defined but never used.",["326"],["327"],"'Field' is defined but never used.","'Form' is defined but never used.","'Formik' is defined but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","React Hook useEffect has missing dependencies: 'currentPage', 'dispatch', 'filter', 'history.location.search', and 'pageSize'. Either include them or remove the dependency array.",["330"],"React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["331"],"React Hook useCallback has missing dependencies: 'filter' and 'pageSize'. Either include them or remove the dependency array.",["332"],"React Hook useCallback has a missing dependency: 'pageSize'. Either include it or remove the dependency array.",["333"],"'getUsersTC' is defined but never used.","'getUsers' is defined but never used.","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["334"],"no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","React Hook useEffect has a missing dependency: 'isAutoScroll'. Either include it or remove the dependency array.",["335"],"no-global-assign","no-unsafe-negation",{"desc":"336","fix":"337"},{"desc":"336","fix":"338"},{"desc":"339","fix":"340"},{"desc":"341","fix":"342"},{"desc":"343","fix":"344"},{"desc":"345","fix":"346"},{"desc":"336","fix":"347"},{"desc":"348","fix":"349"},"Update the dependencies array to be: [dispatch]",{"range":"350","text":"351"},{"range":"352","text":"351"},"Update the dependencies array to be: [currentPage, dispatch, filter, history.location.search, pageSize]",{"range":"353","text":"354"},"Update the dependencies array to be: [filter, currentPage, history]",{"range":"355","text":"356"},"Update the dependencies array to be: [dispatch, filter, pageSize]",{"range":"357","text":"358"},"Update the dependencies array to be: [dispatch, pageSize]",{"range":"359","text":"360"},{"range":"361","text":"351"},"Update the dependencies array to be: [isAutoScroll, messages]",{"range":"362","text":"363"},[1986,1988],"[dispatch]",[2132,2134],[2013,2015],"[currentPage, dispatch, filter, history.location.search, pageSize]",[2406,2427],"[filter, currentPage, history]",[2603,2613],"[dispatch, filter, pageSize]",[2785,2795],"[dispatch, pageSize]",[777,779],[1768,1778],"[isAutoScroll, messages]"]