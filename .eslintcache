[{"C:\\itless\\pathofsamurai\\src\\index.tsx":"1","C:\\itless\\pathofsamurai\\src\\HOC\\withSuspense.tsx":"2","C:\\itless\\pathofsamurai\\src\\HOC\\WithAuthRedirect.tsx":"3","C:\\itless\\pathofsamurai\\src\\utils\\validators\\validators.ts":"4","C:\\itless\\pathofsamurai\\src\\utils\\object-helpers\\object-helpers.tsx":"5","C:\\itless\\pathofsamurai\\src\\SN-1-main\\m1-ui\\App.tsx":"6","C:\\itless\\pathofsamurai\\src\\SN-1-main\\m2-bll\\app-selectors.ts":"7","C:\\itless\\pathofsamurai\\src\\SN-1-main\\m2-bll\\app-reducer.tsx":"8","C:\\itless\\pathofsamurai\\src\\SN-1-main\\m2-bll\\redux-store.tsx":"9","C:\\itless\\pathofsamurai\\src\\SN-3-common\\preLoader\\preLoader.tsx":"10","C:\\itless\\pathofsamurai\\src\\SN-3-common\\Nav\\Nav.tsx":"11","C:\\itless\\pathofsamurai\\src\\SN-3-common\\routes\\Routes.tsx":"12","C:\\itless\\pathofsamurai\\src\\SN-3-common\\Header\\Header.tsx":"13","C:\\itless\\pathofsamurai\\src\\SN-2-features\\f5-chat\\c1-ui\\ChatPage.tsx":"14","C:\\itless\\pathofsamurai\\src\\SN-2-features\\f3-dialogs\\d1-ui\\Dialogs.tsx":"15","C:\\itless\\pathofsamurai\\src\\SN-2-features\\f5-chat\\c2-bll\\chat-reducer.ts":"16","C:\\itless\\pathofsamurai\\src\\SN-2-features\\f1-login\\l2-bll\\auth-selectors.ts":"17","C:\\itless\\pathofsamurai\\src\\SN-2-features\\f2-profile\\p2-bll\\profile-selectors.ts":"18","C:\\itless\\pathofsamurai\\src\\SN-2-features\\f1-login\\l2-bll\\auth-reducer.tsx":"19","C:\\itless\\pathofsamurai\\src\\SN-2-features\\f3-dialogs\\d2-bll\\dialogs-reducer.tsx":"20","C:\\itless\\pathofsamurai\\src\\SN-2-features\\f3-dialogs\\d2-bll\\dialogs-selectors.ts":"21","C:\\itless\\pathofsamurai\\src\\SN-2-features\\f2-profile\\p2-bll\\profile-reducer.tsx":"22","C:\\itless\\pathofsamurai\\src\\SN-2-features\\f4-users\\u2-bll\\users-reducer.tsx":"23","C:\\itless\\pathofsamurai\\src\\SN-3-common\\Page404\\Page404.tsx":"24","C:\\itless\\pathofsamurai\\src\\SN-2-features\\f1-login\\l1-ui\\Login.tsx":"25","C:\\itless\\pathofsamurai\\src\\SN-2-features\\f4-users\\u1-ui\\UsersPage.tsx":"26","C:\\itless\\pathofsamurai\\src\\SN-2-features\\f2-profile\\p1-ui\\ProfileContentContainerAPI.tsx":"27","C:\\itless\\pathofsamurai\\src\\SN-2-features\\f6-music\\m1-ui\\Music.tsx":"28","C:\\itless\\pathofsamurai\\src\\SN-2-features\\f3-dialogs\\d1-ui\\DialogItem\\DialogItem.tsx":"29","C:\\itless\\pathofsamurai\\src\\SN-2-features\\f3-dialogs\\d1-ui\\Message\\Message.tsx":"30","C:\\itless\\pathofsamurai\\src\\SN-3-common\\FormControls\\FormControls.tsx":"31","C:\\itless\\pathofsamurai\\src\\SN-2-features\\f5-chat\\c3-dal\\chat-api.ts":"32","C:\\itless\\pathofsamurai\\src\\SN-2-features\\f1-login\\l3-dal\\auth-api.ts":"33","C:\\itless\\pathofsamurai\\src\\SN-2-features\\f1-login\\l3-dal\\security-api.ts":"34","C:\\itless\\pathofsamurai\\src\\Types\\api-types.ts":"35","C:\\itless\\pathofsamurai\\src\\SN-2-features\\f2-profile\\p3-dal\\profile-api.ts":"36","C:\\itless\\pathofsamurai\\src\\SN-2-features\\f4-users\\u3-dal\\users-api.ts":"37","C:\\itless\\pathofsamurai\\src\\SN-2-features\\f2-profile\\p1-ui\\ProfileContent.tsx":"38","C:\\itless\\pathofsamurai\\src\\SN-2-features\\f4-users\\u2-bll\\users-selectors.tsx":"39","C:\\itless\\pathofsamurai\\src\\SN-2-features\\f4-users\\u1-ui\\Users.tsx":"40","C:\\itless\\pathofsamurai\\src\\SN-2-features\\f1-login\\l1-ui\\LoginForm.tsx":"41","C:\\itless\\pathofsamurai\\src\\SN-1-main\\m3-dal\\instance-api.ts":"42","C:\\itless\\pathofsamurai\\src\\SN-2-features\\f2-profile\\MyPosts\\MyPosts.tsx":"43","C:\\itless\\pathofsamurai\\src\\SN-3-common\\Paginator\\Paginator.tsx":"44","C:\\itless\\pathofsamurai\\src\\SN-2-features\\f4-users\\u1-ui\\User\\UserSearchForm.tsx":"45","C:\\itless\\pathofsamurai\\src\\SN-2-features\\f4-users\\u1-ui\\User\\User.tsx":"46","C:\\itless\\pathofsamurai\\src\\SN-2-features\\f2-profile\\ProfileInfo\\ProfileInfo.tsx":"47","C:\\itless\\pathofsamurai\\src\\SN-2-features\\f2-profile\\MyPosts\\Post\\Post.tsx":"48","C:\\itless\\pathofsamurai\\src\\SN-2-features\\f2-profile\\ProfileInfo\\ProfileData\\ProfileData.tsx":"49","C:\\itless\\pathofsamurai\\src\\SN-2-features\\f2-profile\\ProfileInfo\\ProfileDataForm\\ProfileDataForm.tsx":"50","C:\\itless\\pathofsamurai\\src\\SN-2-features\\f2-profile\\ProfileInfo\\ProfileStatus\\ProfileStatus.tsx":"51","C:\\itless\\pathofsamurai\\src\\SN-2-features\\f1-login\\l1-ui\\LoginAnt.tsx":"52","C:\\itless\\pathofsamurai\\src\\SN-2-features\\f8-settings\\n1-ui\\Settings.tsx":"53"},{"size":413,"mtime":1610122820290,"results":"54","hashOfConfig":"55"},{"size":274,"mtime":1609605921643,"results":"56","hashOfConfig":"55"},{"size":885,"mtime":1610122820296,"results":"57","hashOfConfig":"55"},{"size":382,"mtime":1609605921672,"results":"58","hashOfConfig":"55"},{"size":262,"mtime":1609605921672,"results":"59","hashOfConfig":"55"},{"size":5106,"mtime":1610122048827,"results":"60","hashOfConfig":"55"},{"size":164,"mtime":1610030449391,"results":"61","hashOfConfig":"55"},{"size":1124,"mtime":1610121402573,"results":"62","hashOfConfig":"55"},{"size":1200,"mtime":1610121402558,"results":"63","hashOfConfig":"55"},{"size":657,"mtime":1609763941370,"results":"64","hashOfConfig":"55"},{"size":2367,"mtime":1610124933713,"results":"65","hashOfConfig":"55"},{"size":2059,"mtime":1610124812487,"results":"66","hashOfConfig":"55"},{"size":1007,"mtime":1610121158206,"results":"67","hashOfConfig":"55"},{"size":3135,"mtime":1610123524551,"results":"68","hashOfConfig":"55"},{"size":2582,"mtime":1610122931547,"results":"69","hashOfConfig":"55"},{"size":2875,"mtime":1610122684313,"results":"70","hashOfConfig":"55"},{"size":182,"mtime":1610122048836,"results":"71","hashOfConfig":"55"},{"size":687,"mtime":1610121402580,"results":"72","hashOfConfig":"55"},{"size":3597,"mtime":1610121480220,"results":"73","hashOfConfig":"55"},{"size":1441,"mtime":1610122854551,"results":"74","hashOfConfig":"55"},{"size":256,"mtime":1610123034939,"results":"75","hashOfConfig":"55"},{"size":4833,"mtime":1610122894814,"results":"76","hashOfConfig":"55"},{"size":5237,"mtime":1610122752592,"results":"77","hashOfConfig":"55"},{"size":301,"mtime":1609861373463,"results":"78","hashOfConfig":"55"},{"size":219,"mtime":1609605921653,"results":"79","hashOfConfig":"55"},{"size":565,"mtime":1610122329655,"results":"80","hashOfConfig":"55"},{"size":4089,"mtime":1610123390663,"results":"81","hashOfConfig":"55"},{"size":143,"mtime":1601129789293,"results":"82","hashOfConfig":"55"},{"size":431,"mtime":1609605921649,"results":"83","hashOfConfig":"55"},{"size":280,"mtime":1609605921651,"results":"84","hashOfConfig":"55"},{"size":1831,"mtime":1610122986982,"results":"85","hashOfConfig":"55"},{"size":2680,"mtime":1610029608069,"results":"86","hashOfConfig":"55"},{"size":739,"mtime":1610122820303,"results":"87","hashOfConfig":"55"},{"size":209,"mtime":1610122960252,"results":"88","hashOfConfig":"55"},{"size":590,"mtime":1609605921632,"results":"89","hashOfConfig":"55"},{"size":1221,"mtime":1610122658475,"results":"90","hashOfConfig":"55"},{"size":905,"mtime":1610122658468,"results":"91","hashOfConfig":"55"},{"size":1274,"mtime":1610122384506,"results":"92","hashOfConfig":"55"},{"size":1171,"mtime":1610122960256,"results":"93","hashOfConfig":"55"},{"size":3484,"mtime":1610122193765,"results":"94","hashOfConfig":"55"},{"size":4612,"mtime":1610124695109,"results":"95","hashOfConfig":"55"},{"size":248,"mtime":1609605921633,"results":"96","hashOfConfig":"55"},{"size":2643,"mtime":1610123095829,"results":"97","hashOfConfig":"55"},{"size":1767,"mtime":1609842825651,"results":"98","hashOfConfig":"55"},{"size":2036,"mtime":1610122193773,"results":"99","hashOfConfig":"55"},{"size":2106,"mtime":1610123126486,"results":"100","hashOfConfig":"55"},{"size":2069,"mtime":1610122986990,"results":"101","hashOfConfig":"55"},{"size":1385,"mtime":1610115195884,"results":"102","hashOfConfig":"55"},{"size":1568,"mtime":1609605921660,"results":"103","hashOfConfig":"55"},{"size":2156,"mtime":1610123034951,"results":"104","hashOfConfig":"55"},{"size":1592,"mtime":1610122658457,"results":"105","hashOfConfig":"55"},{"size":995,"mtime":1610131586258,"results":"106","hashOfConfig":"55"},{"size":147,"mtime":1601129789300,"results":"107","hashOfConfig":"55"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},"1yucu63",{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"110"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"132","messages":"133","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"110"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"110"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"110"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193","usedDeprecatedRules":"110"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"196","usedDeprecatedRules":"110"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\itless\\pathofsamurai\\src\\index.tsx",[],["221","222"],"C:\\itless\\pathofsamurai\\src\\HOC\\withSuspense.tsx",[],"C:\\itless\\pathofsamurai\\src\\HOC\\WithAuthRedirect.tsx",[],"C:\\itless\\pathofsamurai\\src\\utils\\validators\\validators.ts",[],"C:\\itless\\pathofsamurai\\src\\utils\\object-helpers\\object-helpers.tsx",[],"C:\\itless\\pathofsamurai\\src\\SN-1-main\\m1-ui\\App.tsx",[],"C:\\itless\\pathofsamurai\\src\\SN-1-main\\m2-bll\\app-selectors.ts",[],"C:\\itless\\pathofsamurai\\src\\SN-1-main\\m2-bll\\app-reducer.tsx",[],"C:\\itless\\pathofsamurai\\src\\SN-1-main\\m2-bll\\redux-store.tsx",[],"C:\\itless\\pathofsamurai\\src\\SN-3-common\\preLoader\\preLoader.tsx",["223","224","225"],"import {Field, Form, Formik} from 'formik';\r\nimport React from 'react';\r\nimport st from './preLoader.module.css';\r\n\r\n\r\nconst PreLoader: React.FC = () => {\r\n    return <div className={st.loader}>\r\n        <div className={st.l_main}>\r\n            <div className={st.l_square}><span></span><span></span><span></span></div>\r\n            <div className={st.l_square}><span></span><span></span><span></span></div>\r\n            <div className={st.l_square}><span></span><span></span><span></span></div>\r\n            <div className={st.l_square}><span></span><span></span><span></span></div>\r\n\r\n        </div>\r\n    </div>;\r\n\r\n};\r\n\r\n\r\n\r\n\r\nexport default PreLoader;\r\n","C:\\itless\\pathofsamurai\\src\\SN-3-common\\Nav\\Nav.tsx",[],"C:\\itless\\pathofsamurai\\src\\SN-3-common\\routes\\Routes.tsx",["226"],"import React from 'react';\r\nimport {Redirect, Route, Switch} from 'react-router-dom';\r\nimport Login from '../../SN-2-features/f1-login/l1-ui/Login';\r\nimport {SuspendedChat, SuspendedDialogs} from '../../SN-1-main/m1-ui/App';\r\nimport Settings from '../../SN-2-features/f8-settings/n1-ui/Settings';\r\nimport Music from '../../SN-2-features/f6-music/m1-ui/Music';\r\nimport {Page404} from '../Page404/Page404';\r\nimport News from '../../SN-2-features/f7-news/s1-ui/News';\r\nimport UsersPage from '../../SN-2-features/f4-users/u1-ui/UsersPage';\r\nimport ProfileContentContainerAPI from '../../SN-2-features/f2-profile/p1-ui/ProfileContentContainerAPI';\r\nimport LoginAnt from '../../SN-2-features/f1-login/l1-ui/LoginAnt';\r\n\r\n\r\nexport const SIGN_IN_PATH = '/login';\r\nexport const PROFILE_PATH = '/profile';\r\nexport const DIALOGS_PATH = '/dialogs';\r\nexport const USERS_PATH = '/users';\r\nexport const CHAT_PATH = '/chat';\r\nexport const NEWS_PATH = '/news';\r\nexport const MUSIC_PATH = '/music';\r\nexport const SETTINGS_PATH = '/settings';\r\nexport const PAGE_NOT_FOUND_PATH = '/404';\r\n\r\ntype PropsType = {}\r\nexport const Routes: React.FC<PropsType> = (props) => {\r\n\r\n    return <>\r\n        <Switch>\r\n            <Route path={SIGN_IN_PATH} render={() => <Login/>}/>\r\n            <Route exact path='/'\r\n                   render={() => <Redirect to={PROFILE_PATH}/>}/>\r\n            <Route path={DIALOGS_PATH} render={() => <SuspendedDialogs/>}/>\r\n            <Route path={PROFILE_PATH + '/:userId?'} render={() =>\r\n                <ProfileContentContainerAPI/>}/>\r\n            <Route path={USERS_PATH} render={() => <UsersPage/>}/>\r\n            <Route path={NEWS_PATH} render={() => <LoginAnt/>}/>\r\n            <Route path={PAGE_NOT_FOUND_PATH} render={() => <Page404/>}/>\r\n            <Route path={MUSIC_PATH} render={() => <Music/>}/>\r\n            <Route path={SETTINGS_PATH} render={() => <Settings/>}/>\r\n            <Route path={CHAT_PATH} render={() => <SuspendedChat/>}/>\r\n            <Redirect from={'*'} to={PAGE_NOT_FOUND_PATH}/>\r\n        </Switch>\r\n\r\n    </>;\r\n};\r\n\r\n","C:\\itless\\pathofsamurai\\src\\SN-3-common\\Header\\Header.tsx",[],"C:\\itless\\pathofsamurai\\src\\SN-2-features\\f5-chat\\c1-ui\\ChatPage.tsx",["227","228","229"],"import {useDispatch, useSelector} from 'react-redux';\r\nimport React, {useEffect, useRef, useState} from 'react';\r\nimport {ChatMessageAPIType, StatusType} from '../c3-dal/chat-api';\r\nimport {AppRootStateType} from '../../../SN-1-main/m2-bll/redux-store';\r\nimport {ChatMessageType, sendMessage, startMessagesListening, stopMessagesListening} from '../c2-bll/chat-reducer';\r\nimport {withAuthRedirect} from '../../../HOC/WithAuthRedirect';\r\n\r\nconst ChatPage: React.FC = () => {\r\n    return <div>\r\n        <Chat/>\r\n    </div>;\r\n};\r\n\r\nconst Chat: React.FC = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const status = useSelector<AppRootStateType, StatusType>(state => state.chat.status);\r\n\r\n    useEffect(() => {\r\n        dispatch(startMessagesListening());\r\n        return () => {\r\n            dispatch(stopMessagesListening());\r\n        };\r\n    }, []);\r\n\r\n    return <div>\r\n        {status === 'error' && <div>Some error occured. Please refresh the page</div>}\r\n        <>\r\n            <Messages/>\r\n            <AddMessageForm/>\r\n        </>\r\n    </div>;\r\n};\r\n\r\nconst Messages: React.FC<{}> = ({}) => {\r\n    const messages = useSelector<AppRootStateType, ChatMessageType[]>(state => state.chat.messages);\r\n    const messagesAnchorRef = useRef<HTMLDivElement>(null);\r\n    const [isAutoScroll, setIsAutoScroll] = useState(true);\r\n\r\n    const scrollHandler = (e: React.UIEvent<HTMLDivElement, UIEvent>) => {\r\n        const element = e.currentTarget;\r\n        if (Math.abs((element.scrollHeight - element.scrollTop) - element.clientHeight) < 300) {\r\n            !isAutoScroll && setIsAutoScroll(true);\r\n        } else {\r\n            isAutoScroll && setIsAutoScroll(false);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (isAutoScroll) {\r\n            messagesAnchorRef.current?.scrollIntoView({behavior: 'smooth'});\r\n        }\r\n    }, [messages,isAutoScroll]);\r\n\r\n    return <div style={{height: '400px', overflowY: 'auto'}} onScroll={scrollHandler}>\r\n        {messages.map((m, index) => <Message key={m.id} message={m}/>)}\r\n        <div ref={messagesAnchorRef}></div>\r\n    </div>;\r\n};\r\n\r\n\r\nconst Message: React.FC<{ message: ChatMessageAPIType }> = React.memo(({message}) => {\r\n    console.log('>>>>>>Message');\r\n    return <div>\r\n        <img src={message.photo} style={{width: '30px'}}/> <b>{message.userName}</b>\r\n        <br/>\r\n        {message.message}\r\n        <hr/>\r\n    </div>;\r\n});\r\n\r\n\r\nconst AddMessageForm: React.FC<{}> = () => {\r\n    const [message, setMessage] = useState('');\r\n    const dispatch = useDispatch();\r\n\r\n    const status = useSelector<AppRootStateType, StatusType>(state => state.chat.status);\r\n\r\n    const sendMessageHandler = () => {\r\n        if (!message) {\r\n            return;\r\n        }\r\n        dispatch(sendMessage(message));\r\n        setMessage('');\r\n    };\r\n\r\n    return <div>\r\n        <div>\r\n            <textarea onChange={(e) => setMessage(e.currentTarget.value)} value={message}/>\r\n        </div>\r\n        <div>\r\n            <button disabled={status !== 'ready'} onClick={sendMessageHandler}>Send</button>\r\n        </div>\r\n    </div>;\r\n};\r\n\r\nexport default withAuthRedirect(ChatPage);\r\n","C:\\itless\\pathofsamurai\\src\\SN-2-features\\f3-dialogs\\d1-ui\\Dialogs.tsx",[],"C:\\itless\\pathofsamurai\\src\\SN-2-features\\f5-chat\\c2-bll\\chat-reducer.ts",[],"C:\\itless\\pathofsamurai\\src\\SN-2-features\\f1-login\\l2-bll\\auth-selectors.ts",[],"C:\\itless\\pathofsamurai\\src\\SN-2-features\\f2-profile\\p2-bll\\profile-selectors.ts",[],"C:\\itless\\pathofsamurai\\src\\SN-2-features\\f1-login\\l2-bll\\auth-reducer.tsx",[],"C:\\itless\\pathofsamurai\\src\\SN-2-features\\f3-dialogs\\d2-bll\\dialogs-reducer.tsx",[],"C:\\itless\\pathofsamurai\\src\\SN-2-features\\f3-dialogs\\d2-bll\\dialogs-selectors.ts",[],"C:\\itless\\pathofsamurai\\src\\SN-2-features\\f2-profile\\p2-bll\\profile-reducer.tsx",[],"C:\\itless\\pathofsamurai\\src\\SN-2-features\\f4-users\\u2-bll\\users-reducer.tsx",[],"C:\\itless\\pathofsamurai\\src\\SN-3-common\\Page404\\Page404.tsx",[],"C:\\itless\\pathofsamurai\\src\\SN-2-features\\f1-login\\l1-ui\\Login.tsx",[],"C:\\itless\\pathofsamurai\\src\\SN-2-features\\f4-users\\u1-ui\\UsersPage.tsx",[],"C:\\itless\\pathofsamurai\\src\\SN-2-features\\f2-profile\\p1-ui\\ProfileContentContainerAPI.tsx",["230","231"],"import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {RouteComponentProps, withRouter} from 'react-router-dom';\r\nimport {compose} from 'redux';\r\nimport {Profile} from './ProfileContent';\r\nimport {NewProfileType} from '../../../Types/Types';\r\nimport {AppRootStateType} from '../../../SN-1-main/m2-bll/redux-store';\r\nimport {getUserProfile, getUserStatus, savePhoto, saveProfile, updateUserStatus} from '../p2-bll/profile-reducer';\r\nimport {withAuthRedirect} from '../../../HOC/WithAuthRedirect';\r\n\r\n\r\ntype MapPropsType = ReturnType<typeof mapStateToProps>\r\ntype DispatchPropsType = {\r\n    getUserProfile: (userId: number | null) => void\r\n    getUserStatus: (userId: number | null) => void\r\n    updateUserStatus: (status: string) => void\r\n    savePhoto: (file: File) => void\r\n    saveProfile: (profile: NewProfileType) => Promise<any>\r\n}\r\n\r\ntype PathParamsType = {\r\n    userId: string\r\n\r\n}\r\n\r\n\r\ntype PropsType = MapPropsType & DispatchPropsType & RouteComponentProps<PathParamsType>;\r\n//\r\n// type HooksType = {}\r\n// const ProfileHooks: React.FC<HooksType> = (props) => {\r\n//     const {id} = useParams<{ id: string }>()\r\n//     const dispatch = useDispatch();\r\n//     const profile = useSelector(getProfile)\r\n//     const status = useSelector(getStatus)\r\n//     const isAuth = useSelector(getIsAuth)\r\n//     const authorizedUserId = useSelector(getUserId)\r\n//\r\n//     const getUserProfile = useCallback((userId: number | null) => {\r\n//         dispatch(getUserProfile(userId))\r\n//     }, [dispatch])\r\n//     const getUserStatus = useCallback((userId: number | null) => {\r\n//         dispatch(getUserStatus(userId))\r\n//     }, [dispatch])\r\n//     const updateUserStatus = useCallback((status: string) => {\r\n//         dispatch(updateUserStatus(status))\r\n//     }, [dispatch])\r\n//     const savePhoto = useCallback((photo: File) => {\r\n//         dispatch(savePhoto(photo))\r\n//     }, [])\r\n//     const saveProfile = useCallback(async (profile: NewProfileType): Promise<any> => {\r\n//         await dispatch(saveProfile(profile))\r\n//     }, [])\r\n//\r\n//\r\n//     useEffect(() => {\r\n//     }, [])\r\n//\r\n//\r\n//     return (\r\n//         <div>\r\n//\r\n//\r\n//         </div>);\r\n//\r\n// }\r\n\r\n\r\nclass ProfileContentContainerAPI extends React.Component<PropsType> {\r\n    constructor(props: PropsType) {\r\n        super(props);\r\n    }\r\n\r\n    refreshProfile() {\r\n        let userId: number | null = +this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n            if (!userId) {\r\n                this.props.history.push('/login');\r\n            }\r\n        }\r\n\r\n        if (!userId) {\r\n            console.error('ID should exists in URI params or in state (\\'authorizedUserId\\')');\r\n        } else {\r\n            this.props.getUserProfile(userId);\r\n            this.props.getUserStatus(userId);\r\n        }\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n\r\n        this.refreshProfile();\r\n    }\r\n\r\n    componentDidUpdate(prevProps: PropsType, prevState: PropsType) {\r\n        if (this.props.match.params.userId != prevProps.match.params.userId) {\r\n            this.refreshProfile();\r\n        }\r\n\r\n    }\r\n\r\n    componentWillUnmount(): void {\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Profile\r\n                    {...this.props}\r\n                    isOwner={!this.props.match.params.userId}\r\n                    profile={this.props.profile}\r\n                    status={this.props.status}\r\n                    updateStatus={this.props.updateUserStatus}\r\n                />\r\n\r\n            </div>);\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state: AppRootStateType) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    isAuth: state.auth.isAuth,\r\n    authorizedUserId: state.auth.userId,\r\n\r\n\r\n});\r\n\r\n\r\nexport default compose<React.ComponentType>(\r\n    connect(mapStateToProps, {\r\n        getUserProfile,\r\n        getUserStatus,\r\n        updateUserStatus,\r\n        savePhoto,\r\n        saveProfile\r\n    }),\r\n    withRouter,\r\n    withAuthRedirect\r\n)(ProfileContentContainerAPI);\r\n\r\n\r\n","C:\\itless\\pathofsamurai\\src\\SN-2-features\\f6-music\\m1-ui\\Music.tsx",[],"C:\\itless\\pathofsamurai\\src\\SN-2-features\\f3-dialogs\\d1-ui\\DialogItem\\DialogItem.tsx",[],"C:\\itless\\pathofsamurai\\src\\SN-2-features\\f3-dialogs\\d1-ui\\Message\\Message.tsx",[],"C:\\itless\\pathofsamurai\\src\\SN-3-common\\FormControls\\FormControls.tsx",[],"C:\\itless\\pathofsamurai\\src\\SN-2-features\\f5-chat\\c3-dal\\chat-api.ts",[],"C:\\itless\\pathofsamurai\\src\\SN-2-features\\f1-login\\l3-dal\\auth-api.ts",[],"C:\\itless\\pathofsamurai\\src\\SN-2-features\\f1-login\\l3-dal\\security-api.ts",[],"C:\\itless\\pathofsamurai\\src\\Types\\api-types.ts",[],"C:\\itless\\pathofsamurai\\src\\SN-2-features\\f2-profile\\p3-dal\\profile-api.ts",[],"C:\\itless\\pathofsamurai\\src\\SN-2-features\\f4-users\\u3-dal\\users-api.ts",[],"C:\\itless\\pathofsamurai\\src\\SN-2-features\\f2-profile\\p1-ui\\ProfileContent.tsx",[],"C:\\itless\\pathofsamurai\\src\\SN-2-features\\f4-users\\u2-bll\\users-selectors.tsx",[],"C:\\itless\\pathofsamurai\\src\\SN-2-features\\f4-users\\u1-ui\\Users.tsx",["232","233","234","235"],"import React, {useCallback, useEffect} from 'react';\r\nimport User from './User/User';\r\nimport {UserSearchForm} from './User/UserSearchForm';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\n\r\nimport {useHistory} from 'react-router-dom';\r\nimport * as queryString from 'querystring';\r\nimport {\r\n    getCurrentPage,\r\n    getFollowingInProgress,\r\n    getPageSize,\r\n    getTotalUsers,\r\n    getUsers,\r\n    getUsersFilter\r\n} from '../u2-bll/users-selectors';\r\nimport {FilterType, followTC, getUsersTC, unfollowTC} from '../u2-bll/users-reducer';\r\nimport Paginator from '../../../SN-3-common/Paginator/Paginator';\r\nimport {userType} from '../../../Types/Types';\r\n\r\n\r\ntype PropsType = {}\r\ntype QueryParamsType = { term?: string; page?: string; friend?: string }\r\nexport const Users: React.FC<PropsType> = (props) => {\r\n    const dispatch = useDispatch();\r\n    const totalUsersCount = useSelector(getTotalUsers);\r\n    const currentPage = useSelector(getCurrentPage);\r\n    const pageSize = useSelector(getPageSize);\r\n    const followingInProgress = useSelector(getFollowingInProgress);\r\n    const users = useSelector(getUsers);\r\n    const filter = useSelector(getUsersFilter);\r\n\r\n    const history = useHistory()\r\n    useEffect(() => {\r\n        const parsed = queryString.parse(history.location.search.substr(1)) as QueryParamsType\r\n        let actualPage = currentPage\r\n        let actualFilter = filter\r\n        if (!!parsed.page) actualPage = Number(parsed.page)\r\n        if (!!parsed.term) actualFilter = {...actualFilter, term: parsed.term as string}\r\n        switch (parsed.friend) {\r\n            case 'null':\r\n                actualFilter = {...actualFilter, friend: null}\r\n                break;\r\n            case 'true':\r\n                actualFilter = {...actualFilter, friend: true}\r\n                break;\r\n            case 'false':\r\n                actualFilter = {...actualFilter, friend: false}\r\n                break;\r\n        }\r\n\r\n        dispatch(getUsersTC(actualPage, pageSize, actualFilter))\r\n    }, [])\r\n    useEffect(() => {\r\n        const query: QueryParamsType = {}\r\n        if (!!filter.term) query.term = filter.term\r\n        if (filter.friend !== null) query.friend = String(filter.friend)\r\n        if (currentPage !== 1) query.page = String(currentPage)\r\n        history.push({\r\n            pathname: '/users',\r\n            search: queryString.stringify(query)\r\n        })\r\n    }, [filter, currentPage])\r\n\r\n    const onPageChanged = useCallback((pageNumber: number) => {\r\n        dispatch(getUsersTC(pageNumber, pageSize, filter));\r\n    }, [dispatch]);\r\n\r\n    const onFilterChanged = useCallback((filter: FilterType) => {\r\n        dispatch(getUsersTC(1, pageSize, filter));\r\n    }, [dispatch]);\r\n\r\n    const follow = useCallback((userId: number) => {\r\n        dispatch(followTC(userId));\r\n    }, [dispatch]);\r\n\r\n    const unfollow = useCallback((userId: number) => {\r\n        dispatch(unfollowTC(userId));\r\n    }, [dispatch]);\r\n\r\n    return (\r\n        <div>\r\n            <UserSearchForm onFilterChanged={onFilterChanged}/>\r\n            <Paginator currentPage={currentPage} onPageChanged={onPageChanged} pageSize={pageSize}\r\n                       totalUsersCount={totalUsersCount}/>\r\n            {users.map((user: userType) => <User\r\n                unfollowTC={unfollow}\r\n                followTC={follow}\r\n                followingInProgress={followingInProgress}\r\n                user={user}\r\n                key={user.id}/>)}\r\n\r\n        </div>);\r\n};\r\n\r\n\r\n","C:\\itless\\pathofsamurai\\src\\SN-2-features\\f1-login\\l1-ui\\LoginForm.tsx",["236"],"import React from 'react';\r\nimport {\r\n    Button,\r\n    Checkbox,\r\n    FormControl,\r\n    FormControlLabel,\r\n    FormGroup,\r\n    FormLabel,\r\n    Grid,\r\n    TextField\r\n} from '@material-ui/core';\r\nimport {useFormik} from 'formik';\r\nimport {connect} from 'react-redux';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {LoginParamsType} from '../../../Types/api-types';\r\nimport {AppRootStateType} from '../../../SN-1-main/m2-bll/redux-store';\r\nimport {loginTC} from '../l2-bll/auth-reducer';\r\nimport LoginAnt from './LoginAnt';\r\n\r\n// TODO сделать проверку правильности пароля\r\n\r\ntype LoginFormType = {\r\n    loginTC: (data: LoginParamsType) => Promise<any>\r\n    isCorrect: boolean\r\n    isAuth: boolean\r\n    captchaUrl: string | null\r\n}\r\n\r\n\r\nconst LoginForm: React.FC<LoginFormType> = ({isAuth, isCorrect, loginTC, captchaUrl}) => {\r\n\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            email: '',\r\n            password: '',\r\n            rememberMe: false,\r\n            isCorrect: isCorrect,\r\n            confirm: ''\r\n        }, validate(values: FormikType) {\r\n            const errors: FormikType = {};\r\n\r\n            if (!values.email) {\r\n                errors.email = 'Required';\r\n            } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\r\n                errors.email = 'Invalid email address';\r\n            }\r\n            if (!values.password) {\r\n                errors.password = 'Required';\r\n            } else if (values.password.length < 5) {\r\n                errors.password = 'Must be 5 characters or more';\r\n            }\r\n            if (!values.isCorrect) {\r\n                errors.confirm = 'Incorrect email or password';\r\n            }\r\n\r\n            return errors;\r\n        },\r\n\r\n        onSubmit: async (values) => {\r\n            await loginTC(values);\r\n\r\n        },\r\n    });\r\n\r\n    if (isAuth) {\r\n        return <Redirect to={'/profile'}/>;\r\n    }\r\n    //TODO доделать отправку капчи\r\n    return <form onSubmit={formik.handleSubmit}>\r\n        <Grid container justify=\"center\">\r\n            <Grid item xs={4}>\r\n                <FormControl>\r\n                    <FormLabel>\r\n                        <p>To log in get registered\r\n                            <a href={'https://social-network.samuraijs.com/'}\r\n                               target={'_blank'}>here\r\n                            </a>\r\n                        </p>\r\n                        <p>or use common test account credentials:</p>\r\n                        <p>Email: free@samuraijs.com</p>\r\n                        <p>Password: free</p>\r\n                    </FormLabel>\r\n                    <FormGroup>\r\n                        <TextField\r\n                            label=\"Email\"\r\n                            margin=\"normal\"\r\n                            {...formik.getFieldProps('email')}\r\n                        />{\r\n                        formik.errors.email ? <div style={{color: 'red'}}>{formik.errors.email}</div> : null\r\n                    }\r\n                        <TextField\r\n                            type=\"password\"\r\n                            label=\"Password\"\r\n                            margin=\"normal\"\r\n                            {...formik.getFieldProps('password')}\r\n                        />{\r\n                        formik.errors.password ? <div style={{color: 'red'}}>{formik.errors.password}</div> : null\r\n                    }\r\n\r\n                        {\r\n                            formik.errors.confirm ? <div style={{color: 'red'}}>{formik.errors.confirm}</div> : null\r\n                        }\r\n                        <FormControlLabel\r\n                            label={'Remember me'}\r\n                            control={<Checkbox/>}\r\n                            {...formik.getFieldProps('rememberMe')}\r\n                        />\r\n                        <Button type={'submit'} variant={'contained'} color={'primary'}>Login</Button>\r\n                    </FormGroup>\r\n                </FormControl>\r\n            </Grid>\r\n        </Grid>\r\n           </form>;\r\n\r\n\r\n};\r\n\r\n\r\nconst mapStateToProps = (state: AppRootStateType): MapStatePropsType => ({\r\n    isAuth: state.auth.isAuth,\r\n    isCorrect: state.auth.isCorrect,\r\n    captchaUrl: state.auth.captchaUrl\r\n\r\n});\r\ntype MapStatePropsType = {\r\n    isAuth: boolean\r\n    isCorrect: boolean\r\n    captchaUrl: string | null\r\n\r\n}\r\ntype FormikType = {\r\n    email?: string\r\n    password?: string\r\n    rememberMe?: boolean\r\n    isCorrect?: boolean\r\n    confirm?: string\r\n}\r\nexport default connect(mapStateToProps, {loginTC})(LoginForm);\r\n","C:\\itless\\pathofsamurai\\src\\SN-1-main\\m3-dal\\instance-api.ts",[],"C:\\itless\\pathofsamurai\\src\\SN-2-features\\f2-profile\\MyPosts\\MyPosts.tsx",[],"C:\\itless\\pathofsamurai\\src\\SN-3-common\\Paginator\\Paginator.tsx",[],"C:\\itless\\pathofsamurai\\src\\SN-2-features\\f4-users\\u1-ui\\User\\UserSearchForm.tsx",[],"C:\\itless\\pathofsamurai\\src\\SN-2-features\\f4-users\\u1-ui\\User\\User.tsx",[],"C:\\itless\\pathofsamurai\\src\\SN-2-features\\f2-profile\\ProfileInfo\\ProfileInfo.tsx",[],"C:\\itless\\pathofsamurai\\src\\SN-2-features\\f2-profile\\MyPosts\\Post\\Post.tsx",[],"C:\\itless\\pathofsamurai\\src\\SN-2-features\\f2-profile\\ProfileInfo\\ProfileData\\ProfileData.tsx",[],"C:\\itless\\pathofsamurai\\src\\SN-2-features\\f2-profile\\ProfileInfo\\ProfileDataForm\\ProfileDataForm.tsx",[],"C:\\itless\\pathofsamurai\\src\\SN-2-features\\f2-profile\\ProfileInfo\\ProfileStatus\\ProfileStatus.tsx",[],"C:\\itless\\pathofsamurai\\src\\SN-2-features\\f1-login\\l1-ui\\LoginAnt.tsx",[],"C:\\itless\\pathofsamurai\\src\\SN-2-features\\f8-settings\\n1-ui\\Settings.tsx",[],{"ruleId":"237","replacedBy":"238"},{"ruleId":"239","replacedBy":"240"},{"ruleId":"241","severity":1,"message":"242","line":1,"column":9,"nodeType":"243","messageId":"244","endLine":1,"endColumn":14},{"ruleId":"241","severity":1,"message":"245","line":1,"column":16,"nodeType":"243","messageId":"244","endLine":1,"endColumn":20},{"ruleId":"241","severity":1,"message":"246","line":1,"column":22,"nodeType":"243","messageId":"244","endLine":1,"endColumn":28},{"ruleId":"241","severity":1,"message":"247","line":8,"column":8,"nodeType":"243","messageId":"244","endLine":8,"endColumn":12},{"ruleId":"248","severity":1,"message":"249","line":24,"column":8,"nodeType":"250","endLine":24,"endColumn":10,"suggestions":"251"},{"ruleId":"252","severity":1,"message":"253","line":35,"column":33,"nodeType":"254","messageId":"255","endLine":35,"endColumn":35},{"ruleId":"256","severity":1,"message":"257","line":65,"column":9,"nodeType":"258","endLine":65,"endColumn":59},{"ruleId":"259","severity":1,"message":"260","line":69,"column":5,"nodeType":"261","messageId":"262","endLine":71,"endColumn":6},{"ruleId":"263","severity":1,"message":"264","line":97,"column":44,"nodeType":"265","messageId":"255","endLine":97,"endColumn":46},{"ruleId":"248","severity":1,"message":"266","line":52,"column":8,"nodeType":"250","endLine":52,"endColumn":10,"suggestions":"267"},{"ruleId":"248","severity":1,"message":"268","line":62,"column":8,"nodeType":"250","endLine":62,"endColumn":29,"suggestions":"269"},{"ruleId":"248","severity":1,"message":"270","line":66,"column":8,"nodeType":"250","endLine":66,"endColumn":18,"suggestions":"271"},{"ruleId":"248","severity":1,"message":"272","line":70,"column":8,"nodeType":"250","endLine":70,"endColumn":18,"suggestions":"273"},{"ruleId":"274","severity":1,"message":"275","line":76,"column":29,"nodeType":"258","endLine":77,"endColumn":50},"no-native-reassign",["276"],"no-negated-in-lhs",["277"],"@typescript-eslint/no-unused-vars","'Field' is defined but never used.","Identifier","unusedVar","'Form' is defined but never used.","'Formik' is defined but never used.","'News' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["278"],"no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","@typescript-eslint/no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","React Hook useEffect has missing dependencies: 'currentPage', 'dispatch', 'filter', 'history.location.search', and 'pageSize'. Either include them or remove the dependency array.",["279"],"React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["280"],"React Hook useCallback has missing dependencies: 'filter' and 'pageSize'. Either include them or remove the dependency array.",["281"],"React Hook useCallback has a missing dependency: 'pageSize'. Either include it or remove the dependency array.",["282"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","no-global-assign","no-unsafe-negation",{"desc":"283","fix":"284"},{"desc":"285","fix":"286"},{"desc":"287","fix":"288"},{"desc":"289","fix":"290"},{"desc":"291","fix":"292"},"Update the dependencies array to be: [dispatch]",{"range":"293","text":"294"},"Update the dependencies array to be: [currentPage, dispatch, filter, history.location.search, pageSize]",{"range":"295","text":"296"},"Update the dependencies array to be: [filter, currentPage, history]",{"range":"297","text":"298"},"Update the dependencies array to be: [dispatch, filter, pageSize]",{"range":"299","text":"300"},"Update the dependencies array to be: [dispatch, pageSize]",{"range":"301","text":"302"},[852,854],"[dispatch]",[2017,2019],"[currentPage, dispatch, filter, history.location.search, pageSize]",[2406,2427],"[filter, currentPage, history]",[2565,2575],"[dispatch, filter, pageSize]",[2707,2717],"[dispatch, pageSize]"]