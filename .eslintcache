[{"D:\\Education\\itcamasutra\\pathofsamurai\\src\\index.tsx":"1","D:\\Education\\itcamasutra\\pathofsamurai\\src\\SN-1-main\\m1-ui\\App.tsx":"2","D:\\Education\\itcamasutra\\pathofsamurai\\src\\SN-1-main\\m2-bll\\app-selectors.ts":"3","D:\\Education\\itcamasutra\\pathofsamurai\\src\\SN-1-main\\m2-bll\\app-reducer.tsx":"4","D:\\Education\\itcamasutra\\pathofsamurai\\src\\SN-1-main\\m2-bll\\redux-store.tsx":"5","D:\\Education\\itcamasutra\\pathofsamurai\\src\\HOC\\withSuspense.tsx":"6","D:\\Education\\itcamasutra\\pathofsamurai\\src\\SN-3-common\\Nav\\Nav.tsx":"7","D:\\Education\\itcamasutra\\pathofsamurai\\src\\SN-3-common\\Header\\Header.tsx":"8","D:\\Education\\itcamasutra\\pathofsamurai\\src\\SN-3-common\\routes\\Routes.tsx":"9","D:\\Education\\itcamasutra\\pathofsamurai\\src\\SN-2-features\\f5-chat\\c1-ui\\ChatPage.tsx":"10","D:\\Education\\itcamasutra\\pathofsamurai\\src\\SN-2-features\\f3-dialogs\\d1-ui\\Dialogs.tsx":"11","D:\\Education\\itcamasutra\\pathofsamurai\\src\\SN-3-common\\preLoader\\preLoader.tsx":"12","D:\\Education\\itcamasutra\\pathofsamurai\\src\\SN-2-features\\f5-chat\\c2-bll\\chat-reducer.ts":"13","D:\\Education\\itcamasutra\\pathofsamurai\\src\\SN-2-features\\f2-profile\\p2-bll\\profile-selectors.ts":"14","D:\\Education\\itcamasutra\\pathofsamurai\\src\\SN-2-features\\f1-login\\l2-bll\\auth-selectors.ts":"15","D:\\Education\\itcamasutra\\pathofsamurai\\src\\SN-2-features\\f3-dialogs\\d2-bll\\dialogs-reducer.tsx":"16","D:\\Education\\itcamasutra\\pathofsamurai\\src\\SN-2-features\\f2-profile\\p2-bll\\profile-reducer.tsx":"17","D:\\Education\\itcamasutra\\pathofsamurai\\src\\SN-2-features\\f3-dialogs\\d2-bll\\dialogs-selectors.ts":"18","D:\\Education\\itcamasutra\\pathofsamurai\\src\\SN-2-features\\f1-login\\l2-bll\\auth-reducer.tsx":"19","D:\\Education\\itcamasutra\\pathofsamurai\\src\\SN-2-features\\f4-users\\u2-bll\\users-reducer.tsx":"20","D:\\Education\\itcamasutra\\pathofsamurai\\src\\HOC\\WithAuthRedirect.tsx":"21","D:\\Education\\itcamasutra\\pathofsamurai\\src\\SN-3-common\\Page404\\Page404.tsx":"22","D:\\Education\\itcamasutra\\pathofsamurai\\src\\SN-2-features\\f2-profile\\p1-ui\\ProfileContentContainerAPI.tsx":"23","D:\\Education\\itcamasutra\\pathofsamurai\\src\\utils\\validators\\validators.ts":"24","D:\\Education\\itcamasutra\\pathofsamurai\\src\\SN-2-features\\f8-settings\\n1-ui\\Settings.tsx":"25","D:\\Education\\itcamasutra\\pathofsamurai\\src\\SN-2-features\\f4-users\\u1-ui\\UsersPage.tsx":"26","D:\\Education\\itcamasutra\\pathofsamurai\\src\\SN-2-features\\f6-music\\m1-ui\\Music.tsx":"27","D:\\Education\\itcamasutra\\pathofsamurai\\src\\SN-2-features\\f3-dialogs\\d1-ui\\DialogItem\\DialogItem.tsx":"28","D:\\Education\\itcamasutra\\pathofsamurai\\src\\SN-2-features\\f3-dialogs\\d1-ui\\Message\\Message.tsx":"29","D:\\Education\\itcamasutra\\pathofsamurai\\src\\SN-2-features\\f1-login\\l1-ui\\Login.tsx":"30","D:\\Education\\itcamasutra\\pathofsamurai\\src\\SN-3-common\\FormControls\\FormControls.tsx":"31","D:\\Education\\itcamasutra\\pathofsamurai\\src\\SN-2-features\\f5-chat\\c3-dal\\chat-api.ts":"32","D:\\Education\\itcamasutra\\pathofsamurai\\src\\Types\\api-types.ts":"33","D:\\Education\\itcamasutra\\pathofsamurai\\src\\SN-2-features\\f2-profile\\p3-dal\\profile-api.ts":"34","D:\\Education\\itcamasutra\\pathofsamurai\\src\\SN-2-features\\f1-login\\l3-dal\\security-api.ts":"35","D:\\Education\\itcamasutra\\pathofsamurai\\src\\SN-2-features\\f1-login\\l3-dal\\auth-api.ts":"36","D:\\Education\\itcamasutra\\pathofsamurai\\src\\SN-2-features\\f4-users\\u3-dal\\users-api.ts":"37","D:\\Education\\itcamasutra\\pathofsamurai\\src\\SN-2-features\\f2-profile\\p1-ui\\ProfileContent.tsx":"38","D:\\Education\\itcamasutra\\pathofsamurai\\src\\utils\\object-helpers\\object-helpers.tsx":"39","D:\\Education\\itcamasutra\\pathofsamurai\\src\\SN-2-features\\f1-login\\l1-ui\\l2-old-features\\LoginLabel.tsx":"40","D:\\Education\\itcamasutra\\pathofsamurai\\src\\SN-2-features\\f4-users\\u2-bll\\users-selectors.tsx":"41","D:\\Education\\itcamasutra\\pathofsamurai\\src\\SN-2-features\\f4-users\\u1-ui\\Users.tsx":"42","D:\\Education\\itcamasutra\\pathofsamurai\\src\\SN-1-main\\m3-dal\\instance-api.ts":"43","D:\\Education\\itcamasutra\\pathofsamurai\\src\\SN-2-features\\f2-profile\\MyPosts\\MyPosts.tsx":"44","D:\\Education\\itcamasutra\\pathofsamurai\\src\\SN-2-features\\f2-profile\\ProfileInfo\\ProfileInfo.tsx":"45","D:\\Education\\itcamasutra\\pathofsamurai\\src\\SN-2-features\\f2-profile\\MyPosts\\Post\\Post.tsx":"46","D:\\Education\\itcamasutra\\pathofsamurai\\src\\SN-2-features\\f2-profile\\ProfileInfo\\ProfileData\\ProfileData.tsx":"47","D:\\Education\\itcamasutra\\pathofsamurai\\src\\SN-2-features\\f2-profile\\ProfileInfo\\ProfileDataForm\\ProfileDataForm.tsx":"48","D:\\Education\\itcamasutra\\pathofsamurai\\src\\SN-2-features\\f2-profile\\ProfileInfo\\ProfileStatus\\ProfileStatus.tsx":"49","D:\\Education\\itcamasutra\\pathofsamurai\\src\\SN-2-features\\f4-users\\u1-ui\\User\\User.tsx":"50","D:\\Education\\itcamasutra\\pathofsamurai\\src\\SN-2-features\\f4-users\\u1-ui\\User\\UserSearchForm.tsx":"51","D:\\Education\\itcamasutra\\pathofsamurai\\src\\SN-3-common\\Paginator\\p1-ant\\PaginatorAnt.tsx":"52","D:\\Education\\itcamasutra\\pathofsamurai\\src\\SN-3-common\\emptyPage\\emptyPage.tsx":"53"},{"size":413,"mtime":1610464893917,"results":"54","hashOfConfig":"55"},{"size":5166,"mtime":1610464893888,"results":"56","hashOfConfig":"55"},{"size":164,"mtime":1610464893888,"results":"57","hashOfConfig":"55"},{"size":1124,"mtime":1610464893888,"results":"58","hashOfConfig":"55"},{"size":1202,"mtime":1612209857614,"results":"59","hashOfConfig":"55"},{"size":274,"mtime":1609342389437,"results":"60","hashOfConfig":"55"},{"size":2676,"mtime":1612209857620,"results":"61","hashOfConfig":"55"},{"size":1007,"mtime":1610464893911,"results":"62","hashOfConfig":"55"},{"size":2089,"mtime":1613238404296,"results":"63","hashOfConfig":"55"},{"size":3181,"mtime":1612209857619,"results":"64","hashOfConfig":"55"},{"size":2582,"mtime":1610464893901,"results":"65","hashOfConfig":"55"},{"size":608,"mtime":1610726992695,"results":"66","hashOfConfig":"55"},{"size":2875,"mtime":1610464893907,"results":"67","hashOfConfig":"55"},{"size":797,"mtime":1612209857619,"results":"68","hashOfConfig":"55"},{"size":280,"mtime":1610468537667,"results":"69","hashOfConfig":"55"},{"size":1441,"mtime":1610464893902,"results":"70","hashOfConfig":"55"},{"size":4833,"mtime":1610464893898,"results":"71","hashOfConfig":"55"},{"size":256,"mtime":1610464893902,"results":"72","hashOfConfig":"55"},{"size":3751,"mtime":1612209857614,"results":"73","hashOfConfig":"55"},{"size":5501,"mtime":1610798293650,"results":"74","hashOfConfig":"55"},{"size":885,"mtime":1610464893887,"results":"75","hashOfConfig":"55"},{"size":636,"mtime":1610464893913,"results":"76","hashOfConfig":"55"},{"size":4093,"mtime":1612209857618,"results":"77","hashOfConfig":"55"},{"size":382,"mtime":1608486146910,"results":"78","hashOfConfig":"55"},{"size":147,"mtime":1610464893910,"results":"79","hashOfConfig":"55"},{"size":557,"mtime":1610726992693,"results":"80","hashOfConfig":"55"},{"size":143,"mtime":1610464893908,"results":"81","hashOfConfig":"55"},{"size":431,"mtime":1610464893900,"results":"82","hashOfConfig":"55"},{"size":280,"mtime":1610464893901,"results":"83","hashOfConfig":"55"},{"size":4473,"mtime":1613240545166,"results":"84","hashOfConfig":"55"},{"size":1831,"mtime":1610464893911,"results":"85","hashOfConfig":"55"},{"size":2680,"mtime":1610464893907,"results":"86","hashOfConfig":"55"},{"size":590,"mtime":1610464893916,"results":"87","hashOfConfig":"55"},{"size":1221,"mtime":1610464893899,"results":"88","hashOfConfig":"55"},{"size":209,"mtime":1610464893892,"results":"89","hashOfConfig":"55"},{"size":802,"mtime":1610464893892,"results":"90","hashOfConfig":"55"},{"size":905,"mtime":1610464893906,"results":"91","hashOfConfig":"55"},{"size":1650,"mtime":1612209857618,"results":"92","hashOfConfig":"55"},{"size":262,"mtime":1607258344422,"results":"93","hashOfConfig":"55"},{"size":462,"mtime":1610638516028,"results":"94","hashOfConfig":"55"},{"size":1184,"mtime":1610798308425,"results":"95","hashOfConfig":"55"},{"size":4123,"mtime":1610800758165,"results":"96","hashOfConfig":"55"},{"size":248,"mtime":1610464893889,"results":"97","hashOfConfig":"55"},{"size":1491,"mtime":1612209857615,"results":"98","hashOfConfig":"55"},{"size":3396,"mtime":1612209857618,"results":"99","hashOfConfig":"55"},{"size":2130,"mtime":1613236480248,"results":"100","hashOfConfig":"55"},{"size":1657,"mtime":1612209857617,"results":"101","hashOfConfig":"55"},{"size":2213,"mtime":1612209857617,"results":"102","hashOfConfig":"55"},{"size":1592,"mtime":1610464893896,"results":"103","hashOfConfig":"55"},{"size":2031,"mtime":1610726992691,"results":"104","hashOfConfig":"55"},{"size":2484,"mtime":1610800602825,"results":"105","hashOfConfig":"55"},{"size":1321,"mtime":1610800952310,"results":"106","hashOfConfig":"55"},{"size":525,"mtime":1612209857621,"results":"107","hashOfConfig":"55"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},"wxmvv2",{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"110"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"110"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"191","usedDeprecatedRules":"110"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"196","usedDeprecatedRules":"110"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"203","usedDeprecatedRules":"110"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"206","usedDeprecatedRules":"110"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},"D:\\Education\\itcamasutra\\pathofsamurai\\src\\index.tsx",[],["221","222"],"D:\\Education\\itcamasutra\\pathofsamurai\\src\\SN-1-main\\m1-ui\\App.tsx",[],"D:\\Education\\itcamasutra\\pathofsamurai\\src\\SN-1-main\\m2-bll\\app-selectors.ts",[],"D:\\Education\\itcamasutra\\pathofsamurai\\src\\SN-1-main\\m2-bll\\app-reducer.tsx",[],"D:\\Education\\itcamasutra\\pathofsamurai\\src\\SN-1-main\\m2-bll\\redux-store.tsx",[],"D:\\Education\\itcamasutra\\pathofsamurai\\src\\HOC\\withSuspense.tsx",[],"D:\\Education\\itcamasutra\\pathofsamurai\\src\\SN-3-common\\Nav\\Nav.tsx",[],"D:\\Education\\itcamasutra\\pathofsamurai\\src\\SN-3-common\\Header\\Header.tsx",[],"D:\\Education\\itcamasutra\\pathofsamurai\\src\\SN-3-common\\routes\\Routes.tsx",[],"D:\\Education\\itcamasutra\\pathofsamurai\\src\\SN-2-features\\f5-chat\\c1-ui\\ChatPage.tsx",["223","224","225"],"import {useDispatch, useSelector} from 'react-redux';\r\nimport React, {useEffect, useRef, useState} from 'react';\r\nimport {ChatMessageAPIType, StatusType} from '../c3-dal/chat-api';\r\nimport {AppRootStateType} from '../../../SN-1-main/m2-bll/redux-store';\r\nimport {ChatMessageType, sendMessage, startMessagesListening, stopMessagesListening} from '../c2-bll/chat-reducer';\r\nimport {withAuthRedirect} from '../../../HOC/WithAuthRedirect';\r\nimport {Button} from 'antd';\r\n\r\nconst ChatPage: React.FC = () => {\r\n    return <div>\r\n        <Chat/>\r\n    </div>;\r\n};\r\n\r\nconst Chat: React.FC = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const status = useSelector<AppRootStateType, StatusType>(state => state.chat.status);\r\n\r\n    useEffect(() => {\r\n        dispatch(startMessagesListening());\r\n        return () => {\r\n            dispatch(stopMessagesListening());\r\n        };\r\n    }, []);\r\n\r\n    return <div>\r\n        {status === 'error' && <div>Some error occured. Please refresh the page</div>}\r\n        <>\r\n            <Messages/>\r\n            <AddMessageForm/>\r\n        </>\r\n    </div>;\r\n};\r\n\r\nconst Messages: React.FC<{}> = ({}) => {\r\n    const messages = useSelector<AppRootStateType, ChatMessageType[]>(state => state.chat.messages);\r\n    const messagesAnchorRef = useRef<HTMLDivElement>(null);\r\n    const [isAutoScroll, setIsAutoScroll] = useState(true);\r\n\r\n    const scrollHandler = (e: React.UIEvent<HTMLDivElement, UIEvent>) => {\r\n        const element = e.currentTarget;\r\n        if (Math.abs((element.scrollHeight - element.scrollTop) - element.clientHeight) < 300) {\r\n            !isAutoScroll && setIsAutoScroll(true);\r\n        } else {\r\n            isAutoScroll && setIsAutoScroll(false);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (isAutoScroll) {\r\n            messagesAnchorRef.current?.scrollIntoView({behavior: 'smooth'});\r\n        }\r\n    }, [messages, isAutoScroll]);\r\n\r\n    return <div style={{height: '400px', overflowY: 'auto'}} onScroll={scrollHandler}>\r\n        {messages.map((m, index) => <Message key={m.id} message={m}/>)}\r\n        <div ref={messagesAnchorRef}></div>\r\n    </div>;\r\n};\r\n\r\n\r\nconst Message: React.FC<{ message: ChatMessageAPIType }> = React.memo(({message}) => {\r\n    console.log('>>>>>>Message');\r\n    return <div>\r\n        <img src={message.photo} style={{width: '30px'}}/> <b>{message.userName}</b>\r\n        <br/>\r\n        {message.message}\r\n        <hr/>\r\n    </div>;\r\n});\r\n\r\n\r\nconst AddMessageForm: React.FC<{}> = () => {\r\n    const [message, setMessage] = useState('');\r\n    const dispatch = useDispatch();\r\n\r\n    const status = useSelector<AppRootStateType, StatusType>(state => state.chat.status);\r\n\r\n    const sendMessageHandler = () => {\r\n        if (!message) {\r\n            return;\r\n        }\r\n        dispatch(sendMessage(message));\r\n        setMessage('');\r\n    };\r\n\r\n    return <div>\r\n        <div>\r\n            <textarea onChange={(e) => setMessage(e.currentTarget.value)} value={message}/>\r\n        </div>\r\n        <div>\r\n            <Button onClick={sendMessageHandler} disabled={status !== 'ready'} type='primary'>Send</Button>\r\n        </div>\r\n    </div>;\r\n};\r\n\r\nexport default withAuthRedirect(ChatPage);\r\n","D:\\Education\\itcamasutra\\pathofsamurai\\src\\SN-2-features\\f3-dialogs\\d1-ui\\Dialogs.tsx",[],"D:\\Education\\itcamasutra\\pathofsamurai\\src\\SN-3-common\\preLoader\\preLoader.tsx",[],"D:\\Education\\itcamasutra\\pathofsamurai\\src\\SN-2-features\\f5-chat\\c2-bll\\chat-reducer.ts",[],"D:\\Education\\itcamasutra\\pathofsamurai\\src\\SN-2-features\\f2-profile\\p2-bll\\profile-selectors.ts",[],"D:\\Education\\itcamasutra\\pathofsamurai\\src\\SN-2-features\\f1-login\\l2-bll\\auth-selectors.ts",[],"D:\\Education\\itcamasutra\\pathofsamurai\\src\\SN-2-features\\f3-dialogs\\d2-bll\\dialogs-reducer.tsx",[],"D:\\Education\\itcamasutra\\pathofsamurai\\src\\SN-2-features\\f2-profile\\p2-bll\\profile-reducer.tsx",[],"D:\\Education\\itcamasutra\\pathofsamurai\\src\\SN-2-features\\f3-dialogs\\d2-bll\\dialogs-selectors.ts",[],"D:\\Education\\itcamasutra\\pathofsamurai\\src\\SN-2-features\\f1-login\\l2-bll\\auth-reducer.tsx",[],"D:\\Education\\itcamasutra\\pathofsamurai\\src\\SN-2-features\\f4-users\\u2-bll\\users-reducer.tsx",[],"D:\\Education\\itcamasutra\\pathofsamurai\\src\\HOC\\WithAuthRedirect.tsx",[],"D:\\Education\\itcamasutra\\pathofsamurai\\src\\SN-3-common\\Page404\\Page404.tsx",[],"D:\\Education\\itcamasutra\\pathofsamurai\\src\\SN-2-features\\f2-profile\\p1-ui\\ProfileContentContainerAPI.tsx",["226","227"],"import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {RouteComponentProps, withRouter} from 'react-router-dom';\r\nimport {compose} from 'redux';\r\nimport {Profile} from './ProfileContent';\r\nimport {NewProfileType} from '../../../Types/Types';\r\nimport {AppRootStateType} from '../../../SN-1-main/m2-bll/redux-store';\r\nimport {getUserProfile, getUserStatus, savePhoto, saveProfile, updateUserStatus} from '../p2-bll/profile-reducer';\r\nimport {withAuthRedirect} from '../../../HOC/WithAuthRedirect';\r\n\r\n\r\ntype MapPropsType = ReturnType<typeof mapStateToProps>\r\ntype DispatchPropsType = {\r\n    getUserProfile: (userId: number | null) => void\r\n    getUserStatus: (userId: number | null) => void\r\n    updateUserStatus: (status: string) => void\r\n    savePhoto: (file: File) => Promise<any>\r\n    saveProfile: (profile: NewProfileType) => Promise<any>\r\n}\r\n\r\ntype PathParamsType = {\r\n    userId: string\r\n\r\n}\r\n\r\n\r\ntype PropsType = MapPropsType & DispatchPropsType & RouteComponentProps<PathParamsType>;\r\n//\r\n// type HooksType = {}\r\n// const ProfileHooks: React.FC<HooksType> = (props) => {\r\n//     const {id} = useParams<{ id: string }>()\r\n//     const dispatch = useDispatch();\r\n//     const profile = useSelector(getProfile)\r\n//     const status = useSelector(getStatus)\r\n//     const isAuth = useSelector(getIsAuth)\r\n//     const authorizedUserId = useSelector(getUserId)\r\n//\r\n//     const getUserProfile = useCallback((userId: number | null) => {\r\n//         dispatch(getUserProfile(userId))\r\n//     }, [dispatch])\r\n//     const getUserStatus = useCallback((userId: number | null) => {\r\n//         dispatch(getUserStatus(userId))\r\n//     }, [dispatch])\r\n//     const updateUserStatus = useCallback((status: string) => {\r\n//         dispatch(updateUserStatus(status))\r\n//     }, [dispatch])\r\n//     const savePhoto = useCallback((photo: File) => {\r\n//         dispatch(savePhoto(photo))\r\n//     }, [])\r\n//     const saveProfile = useCallback(async (profile: NewProfileType): Promise<any> => {\r\n//         await dispatch(saveProfile(profile))\r\n//     }, [])\r\n//\r\n//\r\n//     useEffect(() => {\r\n//     }, [])\r\n//\r\n//\r\n//     return (\r\n//         <div>\r\n//\r\n//\r\n//         </div>);\r\n//\r\n// }\r\n\r\n\r\nclass ProfileContentContainerAPI extends React.Component<PropsType> {\r\n    constructor(props: PropsType) {\r\n        super(props);\r\n    }\r\n\r\n    refreshProfile() {\r\n        let userId: number | null = +this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n            if (!userId) {\r\n                this.props.history.push('/login');\r\n            }\r\n        }\r\n\r\n        if (!userId) {\r\n            console.error('ID should exists in URI params or in state (\\'authorizedUserId\\')');\r\n        } else {\r\n            this.props.getUserProfile(userId);\r\n            this.props.getUserStatus(userId);\r\n        }\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        this.refreshProfile();\r\n    }\r\n\r\n    componentDidUpdate(prevProps: PropsType, prevState: PropsType) {\r\n        if (this.props.match.params.userId != prevProps.match.params.userId) {\r\n            this.refreshProfile();\r\n        }\r\n    }\r\n\r\n    componentWillUnmount(): void {\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Profile\r\n                    {...this.props}\r\n                    isOwner={!this.props.match.params.userId}\r\n                    profile={this.props.profile}\r\n                    status={this.props.status}\r\n                    updateStatus={this.props.updateUserStatus}\r\n                />\r\n\r\n            </div>);\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state: AppRootStateType) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    isAuth: state.auth.isAuth,\r\n    authorizedUserId: state.auth.userId,\r\n\r\n\r\n});\r\n\r\n\r\nexport default compose<React.ComponentType>(\r\n    connect(mapStateToProps, {\r\n        getUserProfile,\r\n        getUserStatus,\r\n        updateUserStatus,\r\n        savePhoto,\r\n        saveProfile\r\n    }),\r\n    withRouter,\r\n    withAuthRedirect\r\n)(ProfileContentContainerAPI);\r\n\r\n\r\n","D:\\Education\\itcamasutra\\pathofsamurai\\src\\utils\\validators\\validators.ts",[],"D:\\Education\\itcamasutra\\pathofsamurai\\src\\SN-2-features\\f8-settings\\n1-ui\\Settings.tsx",[],"D:\\Education\\itcamasutra\\pathofsamurai\\src\\SN-2-features\\f4-users\\u1-ui\\UsersPage.tsx",[],"D:\\Education\\itcamasutra\\pathofsamurai\\src\\SN-2-features\\f6-music\\m1-ui\\Music.tsx",[],"D:\\Education\\itcamasutra\\pathofsamurai\\src\\SN-2-features\\f3-dialogs\\d1-ui\\DialogItem\\DialogItem.tsx",[],"D:\\Education\\itcamasutra\\pathofsamurai\\src\\SN-2-features\\f3-dialogs\\d1-ui\\Message\\Message.tsx",[],"D:\\Education\\itcamasutra\\pathofsamurai\\src\\SN-2-features\\f1-login\\l1-ui\\Login.tsx",[],"D:\\Education\\itcamasutra\\pathofsamurai\\src\\SN-3-common\\FormControls\\FormControls.tsx",[],"D:\\Education\\itcamasutra\\pathofsamurai\\src\\SN-2-features\\f5-chat\\c3-dal\\chat-api.ts",[],"D:\\Education\\itcamasutra\\pathofsamurai\\src\\Types\\api-types.ts",[],"D:\\Education\\itcamasutra\\pathofsamurai\\src\\SN-2-features\\f2-profile\\p3-dal\\profile-api.ts",[],"D:\\Education\\itcamasutra\\pathofsamurai\\src\\SN-2-features\\f1-login\\l3-dal\\security-api.ts",[],"D:\\Education\\itcamasutra\\pathofsamurai\\src\\SN-2-features\\f1-login\\l3-dal\\auth-api.ts",[],"D:\\Education\\itcamasutra\\pathofsamurai\\src\\SN-2-features\\f4-users\\u3-dal\\users-api.ts",[],"D:\\Education\\itcamasutra\\pathofsamurai\\src\\SN-2-features\\f2-profile\\p1-ui\\ProfileContent.tsx",[],"D:\\Education\\itcamasutra\\pathofsamurai\\src\\utils\\object-helpers\\object-helpers.tsx",[],"D:\\Education\\itcamasutra\\pathofsamurai\\src\\SN-2-features\\f1-login\\l1-ui\\l2-old-features\\LoginLabel.tsx",["228"],"import React from 'react';\r\n\r\nexport const LoginLabel = () => {\r\n    return (\r\n        <div>\r\n            <p>To log in or get registered\r\n                <a href={'https://social-network.samuraijs.com/'}\r\n                   target={'_blank'}> HERE\r\n                </a>\r\n            </p>\r\n            <p>or use common test account credentials:</p>\r\n            <p>Email: <b>free@samuraijs.com</b></p>\r\n            <p>Password: <b>free</b></p>\r\n        </div>)\r\n}","D:\\Education\\itcamasutra\\pathofsamurai\\src\\SN-2-features\\f4-users\\u2-bll\\users-selectors.tsx",[],"D:\\Education\\itcamasutra\\pathofsamurai\\src\\SN-2-features\\f4-users\\u1-ui\\Users.tsx",["229","230","231","232"],"import React, {useCallback, useEffect} from 'react';\r\nimport User from './User/User';\r\nimport {UserSearchForm} from './User/UserSearchForm';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {useHistory} from 'react-router-dom';\r\nimport * as queryString from 'querystring';\r\nimport {\r\n    getCurrentPage,\r\n    getFollowingInProgress,\r\n    getPageSize,\r\n    getTotalUsers,\r\n    getUsers,\r\n    getUsersFilter\r\n} from '../u2-bll/users-selectors';\r\nimport {FilterType, followTC, getUsersTC, unfollowTC, usersAction} from '../u2-bll/users-reducer';\r\nimport {userType} from '../../../Types/Types';\r\nimport st from './Users.module.css';\r\nimport PaginatorAnt from '../../../SN-3-common/Paginator/p1-ant/PaginatorAnt';\r\n\r\n\r\ntype PropsType = {}\r\ntype QueryParamsType = { term?: string; page?: string; friend?: string }\r\nexport const Users: React.FC<PropsType> = () => {\r\n    const dispatch = useDispatch();\r\n    const totalUsersCount = useSelector(getTotalUsers);\r\n    const currentPage = useSelector(getCurrentPage);\r\n    const pageSize = useSelector(getPageSize);\r\n    const followingInProgress = useSelector(getFollowingInProgress);\r\n    const users = useSelector(getUsers);\r\n    const filter = useSelector(getUsersFilter);\r\n\r\n    const history = useHistory();\r\n    useEffect(() => {\r\n        const parsed = queryString.parse(history.location.search.substr(1)) as QueryParamsType;\r\n        let actualPage = currentPage;\r\n        let actualFilter = filter;\r\n        if (!!parsed.page) actualPage = Number(parsed.page);\r\n        if (!!parsed.term) actualFilter = {...actualFilter, term: parsed.term as string};\r\n        switch (parsed.friend) {\r\n            case 'null':\r\n                actualFilter = {...actualFilter, friend: null};\r\n                break;\r\n            case 'true':\r\n                actualFilter = {...actualFilter, friend: true};\r\n                break;\r\n            case 'false':\r\n                actualFilter = {...actualFilter, friend: false};\r\n                break;\r\n        }\r\n\r\n        dispatch(getUsersTC(actualPage, actualFilter, pageSize));\r\n    }, []);\r\n    useEffect(() => {\r\n        const query: QueryParamsType = {};\r\n        if (!!filter.term) query.term = filter.term;\r\n        if (filter.friend !== null) query.friend = String(filter.friend);\r\n        if (currentPage !== 1) query.page = String(currentPage);\r\n        history.push({\r\n            pathname: '/users',\r\n            search: queryString.stringify(query)\r\n        });\r\n    }, [filter, currentPage]);\r\n\r\n    const onPageChanged = useCallback((pageNumber = 1, pageSize?: number) => {\r\n        dispatch(usersAction.setPageSize(pageSize));\r\n        dispatch(getUsersTC(pageNumber, filter, pageSize));\r\n    }, [dispatch, filter, pageSize]);\r\n\r\n    const onFilterChanged = useCallback((filter: FilterType) => {\r\n\r\n        dispatch(getUsersTC(1, filter, pageSize));\r\n    }, [dispatch,filter]);\r\n\r\n    const follow = useCallback((userId: number) => {\r\n        dispatch(followTC(userId));\r\n    }, [dispatch]);\r\n\r\n    const unfollow = useCallback((userId: number) => {\r\n        dispatch(unfollowTC(userId));\r\n    }, [dispatch]);\r\n\r\n\r\n    return (\r\n        <div className={st.main_wrapper}>\r\n            <UserSearchForm onFilterChanged={onFilterChanged}/>\r\n            <PaginatorAnt totalUsersCount={totalUsersCount}\r\n                          onPageChanged={onPageChanged}\r\n                          currentPage={currentPage}\r\n                          pageSize={pageSize}\r\n                          style={{marginBottom: '10px'}}\r\n            />\r\n            <div className={st.users_wrapper}>\r\n                {users.map((user: userType) => <User\r\n                    unfollowTC={unfollow}\r\n                    followTC={follow}\r\n                    followingInProgress={followingInProgress}\r\n                    user={user}\r\n                    key={user.id}/>)}\r\n            </div>\r\n\r\n\r\n            {/*---old paginator---*/}\r\n            {/*<Paginator currentPage={currentPage} onPageChanged={onPageChanged} pageSize={pageSize}*/}\r\n            {/*           totalUsersCount={totalUsersCount}/>*/}\r\n\r\n        </div>);\r\n};\r\n\r\n\r\n","D:\\Education\\itcamasutra\\pathofsamurai\\src\\SN-1-main\\m3-dal\\instance-api.ts",[],"D:\\Education\\itcamasutra\\pathofsamurai\\src\\SN-2-features\\f2-profile\\MyPosts\\MyPosts.tsx",[],"D:\\Education\\itcamasutra\\pathofsamurai\\src\\SN-2-features\\f2-profile\\ProfileInfo\\ProfileInfo.tsx",["233"],"import React, {useEffect, useState} from 'react';\r\nimport {NewProfileType} from '../../../Types/Types';\r\nimport ProfileStatus from './ProfileStatus/ProfileStatus';\r\nimport commonLogo from '../../../photo/commonAvatar.png';\r\nimport st from './ProfileData/ProfileData.module.css';\r\nimport ProfileData from './ProfileData/ProfileData';\r\nimport ProfileDataForm from './ProfileDataForm/ProfileDataForm';\r\nimport PreLoader from '../../../SN-3-common/preLoader/preLoader';\r\nimport {UploadOutlined} from '@ant-design/icons/lib/icons';\r\nimport {Button, Col, Row, Upload} from 'antd';\r\nimport {UploadRequestOption as RcCustomRequestOptions} from 'rc-upload/lib/interface';\r\nimport {UploadChangeParam} from 'antd/es/upload';\r\n\r\ntype PropsType = {\r\n    status: string\r\n    updateStatus: (status: string) => void\r\n    isOwner: boolean\r\n    savePhoto: (file: File) => Promise<any>\r\n    profile: NewProfileType | null\r\n    saveProfile: (profile: NewProfileType) => Promise<any>\r\n}\r\n\r\n\r\nconst ProfileInfo: React.FC<PropsType> = React.memo(({\r\n                                                         isOwner,\r\n                                                         profile,\r\n                                                         savePhoto,\r\n                                                         status,\r\n                                                         updateStatus,\r\n                                                         saveProfile\r\n                                                     }) => {\r\n    const [editMode, setEditMode] = useState(false);\r\n\r\n    const prop = {\r\n        onChange(info: UploadChangeParam) {\r\n            info.file.status = 'done'\r\n        },\r\n    };\r\n    const goToEditMode = () => {\r\n        setEditMode(true);\r\n    };\r\n    if (!profile) {\r\n        return <div><PreLoader/></div>;\r\n    }\r\n    const onMainPhotoSelected = (value: RcCustomRequestOptions) => {\r\n        savePhoto(value.file)\r\n    };\r\n    const onSubmit = (profile: NewProfileType) => {\r\n        saveProfile(profile).then(() => {\r\n            setEditMode(false);\r\n        });\r\n    };\r\n\r\n\r\n    //old variant\r\n    // const onMainPhotoSelected = (e: ChangeEvent<HTMLInputElement>) => {\r\n    //     if (e.target.files && e.target.files.length) {\r\n    //         savePhoto(e.target.files[0]);\r\n    //     }\r\n    // };\r\n    return <>\r\n        <Row>\r\n            <Col span={12} offset={12}>\r\n                <img src={profile.photos.large || commonLogo} alt={'ava'} className={st.thisAva}/>\r\n            </Col>\r\n            <Col span={12} offset={12}>\r\n                <ProfileStatus isOwner={isOwner}/>\r\n            </Col>\r\n            <Col span={12} offset={12}>\r\n                {isOwner && <Upload customRequest={onMainPhotoSelected} {...prop} >\r\n                    <Button type='primary'>\r\n                        <UploadOutlined/> Change photo\r\n                    </Button>\r\n                </Upload>}\r\n            </Col>\r\n        </Row>\r\n\r\n\r\n        {editMode ? <ProfileDataForm initialValues={profile} profile={profile} onSubmit={onSubmit}/> :\r\n            <ProfileData profile={profile} isOwner={isOwner} editMode={goToEditMode}/>}\r\n\r\n\r\n        {/*old variant*/}\r\n        {/*{isOwner && <input type={'file'} onChange={onMainPhotoSelected}/>}*/}\r\n        {/*<ProfileStatusClass status={props.status} updateStatus={props.updateStatus}/>*/}\r\n    </>;\r\n\r\n});\r\n\r\n\r\nexport default ProfileInfo;\r\n\r\n\r\n\r\n\r\n\r\n","D:\\Education\\itcamasutra\\pathofsamurai\\src\\SN-2-features\\f2-profile\\MyPosts\\Post\\Post.tsx",["234","235"],"import React, {createElement, useState} from 'react';\r\nimport messageLogo from '../../../../photo/commonAvatar.png';\r\nimport {Avatar, Comment, Tooltip} from 'antd';\r\nimport {DislikeFilled, DislikeOutlined, LikeFilled, LikeOutlined} from '@ant-design/icons';\r\nimport st from './Post.module.css';\r\nimport moment from 'moment';\r\n\r\ntype PostType = {\r\n    id: string\r\n    message: string\r\n    likesCount: number\r\n}\r\n\r\n\r\nconst Post: React.FC<PostType> = React.memo(({id, message, likesCount}) => {\r\n    const [likes, setLikes] = useState(0);\r\n    const [dislikes, setDislikes] = useState(0);\r\n    const [action, setAction] = useState<null | string>(null);\r\n\r\n    const like = () => {\r\n        setLikes(1);\r\n        setDislikes(0);\r\n        setAction('liked');\r\n    };\r\n\r\n    const dislike = () => {\r\n        setLikes(0);\r\n        setDislikes(1);\r\n        setAction('disliked');\r\n    };\r\n\r\n    const actions = [\r\n        <Tooltip key=\"comment-basic-like\" title=\"Like\">\r\n      <span onClick={like}>\r\n        {createElement(action === 'liked' ? LikeFilled : LikeOutlined)}\r\n          <span className={st.comment_action}>{likesCount}</span>\r\n      </span>\r\n        </Tooltip>,\r\n        <Tooltip key=\"comment-basic-dislike\" title=\"Dislike\">\r\n      <span onClick={dislike}>\r\n        {React.createElement(action === 'disliked' ? DislikeFilled : DislikeOutlined)}\r\n          <span className={st.comment_action}>{dislikes}</span>\r\n      </span>\r\n        </Tooltip>,\r\n        <span key=\"comment-basic-reply-to\">Reply to</span>,\r\n    ];\r\n\r\n    return (\r\n        <Comment\r\n            actions={actions}\r\n            author={<a>Omgpiu</a>}\r\n            avatar={\r\n                <Avatar\r\n                    src={messageLogo}\r\n                    alt=\"Logo\"\r\n                />\r\n            }\r\n            content={\r\n                <p>\r\n                    {message}\r\n                </p>\r\n            }\r\n            datetime={\r\n                <Tooltip title={moment().format('YYYY-MM-DD HH:mm:ss')}>\r\n                    <span>{moment().fromNow()}</span>\r\n                </Tooltip>\r\n            }\r\n        />\r\n    );\r\n});\r\nexport default Post;\r\n","D:\\Education\\itcamasutra\\pathofsamurai\\src\\SN-2-features\\f2-profile\\ProfileInfo\\ProfileData\\ProfileData.tsx",[],"D:\\Education\\itcamasutra\\pathofsamurai\\src\\SN-2-features\\f2-profile\\ProfileInfo\\ProfileDataForm\\ProfileDataForm.tsx",[],"D:\\Education\\itcamasutra\\pathofsamurai\\src\\SN-2-features\\f2-profile\\ProfileInfo\\ProfileStatus\\ProfileStatus.tsx",[],"D:\\Education\\itcamasutra\\pathofsamurai\\src\\SN-2-features\\f4-users\\u1-ui\\User\\User.tsx",[],"D:\\Education\\itcamasutra\\pathofsamurai\\src\\SN-2-features\\f4-users\\u1-ui\\User\\UserSearchForm.tsx",[],"D:\\Education\\itcamasutra\\pathofsamurai\\src\\SN-3-common\\Paginator\\p1-ant\\PaginatorAnt.tsx",[],"D:\\Education\\itcamasutra\\pathofsamurai\\src\\SN-3-common\\emptyPage\\emptyPage.tsx",[],{"ruleId":"236","replacedBy":"237"},{"ruleId":"238","replacedBy":"239"},{"ruleId":"240","severity":1,"message":"241","line":25,"column":8,"nodeType":"242","endLine":25,"endColumn":10,"suggestions":"243"},{"ruleId":"244","severity":1,"message":"245","line":36,"column":33,"nodeType":"246","messageId":"247","endLine":36,"endColumn":35},{"ruleId":"248","severity":1,"message":"249","line":66,"column":9,"nodeType":"250","endLine":66,"endColumn":59},{"ruleId":"251","severity":1,"message":"252","line":69,"column":5,"nodeType":"253","messageId":"254","endLine":71,"endColumn":6},{"ruleId":"255","severity":1,"message":"256","line":96,"column":44,"nodeType":"257","messageId":"247","endLine":96,"endColumn":46},{"ruleId":"258","severity":1,"message":"259","line":7,"column":17,"nodeType":"250","endLine":8,"endColumn":38},{"ruleId":"240","severity":1,"message":"260","line":52,"column":8,"nodeType":"242","endLine":52,"endColumn":10,"suggestions":"261"},{"ruleId":"240","severity":1,"message":"262","line":62,"column":8,"nodeType":"242","endLine":62,"endColumn":29,"suggestions":"263"},{"ruleId":"240","severity":1,"message":"264","line":67,"column":8,"nodeType":"242","endLine":67,"endColumn":36,"suggestions":"265"},{"ruleId":"240","severity":1,"message":"266","line":72,"column":8,"nodeType":"242","endLine":72,"endColumn":25,"suggestions":"267"},{"ruleId":"268","severity":1,"message":"269","line":1,"column":16,"nodeType":"270","messageId":"271","endLine":1,"endColumn":25},{"ruleId":"268","severity":1,"message":"272","line":16,"column":12,"nodeType":"270","messageId":"271","endLine":16,"endColumn":17},{"ruleId":"273","severity":1,"message":"274","line":51,"column":21,"nodeType":"250","endLine":51,"endColumn":24},"no-native-reassign",["275"],"no-negated-in-lhs",["276"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["277"],"no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","@typescript-eslint/no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","React Hook useEffect has missing dependencies: 'currentPage', 'dispatch', 'filter', 'history.location.search', and 'pageSize'. Either include them or remove the dependency array.",["278"],"React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["279"],"React Hook useCallback has an unnecessary dependency: 'pageSize'. Either exclude it or remove the dependency array.",["280"],"React Hook useCallback has a missing dependency: 'pageSize'. Either include it or remove the dependency array.",["281"],"@typescript-eslint/no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'likes' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-global-assign","no-unsafe-negation",{"desc":"282","fix":"283"},{"desc":"284","fix":"285"},{"desc":"286","fix":"287"},{"desc":"288","fix":"289"},{"desc":"290","fix":"291"},"Update the dependencies array to be: [dispatch]",{"range":"292","text":"293"},"Update the dependencies array to be: [currentPage, dispatch, filter, history.location.search, pageSize]",{"range":"294","text":"295"},"Update the dependencies array to be: [filter, currentPage, history]",{"range":"296","text":"297"},"Update the dependencies array to be: [dispatch, filter]",{"range":"298","text":"299"},"Update the dependencies array to be: [dispatch, pageSize]",{"range":"300","text":"301"},[882,884],"[dispatch]",[2084,2086],"[currentPage, dispatch, filter, history.location.search, pageSize]",[2479,2500],"[filter, currentPage, history]",[2708,2736],"[dispatch, filter]",[2870,2887],"[dispatch, pageSize]"]