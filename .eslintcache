[{"C:\\itless\\pathofsamurai\\src\\index.tsx":"1","C:\\itless\\pathofsamurai\\src\\App.tsx":"2","C:\\itless\\pathofsamurai\\src\\Rdux\\app-reducer.tsx":"3","C:\\itless\\pathofsamurai\\src\\Rdux\\redux-store.tsx":"4","C:\\itless\\pathofsamurai\\src\\HOC\\withSuspense.tsx":"5","C:\\itless\\pathofsamurai\\src\\components\\Nav\\Nav.tsx":"6","C:\\itless\\pathofsamurai\\src\\components\\Dialogs\\DialogsContainer.tsx":"7","C:\\itless\\pathofsamurai\\src\\components\\common\\routes\\Routes.tsx":"8","C:\\itless\\pathofsamurai\\src\\components\\common\\preLoader\\preLoader.tsx":"9","C:\\itless\\pathofsamurai\\src\\Rdux\\auth-reducer.tsx":"10","C:\\itless\\pathofsamurai\\src\\Rdux\\dialogs-reducer.tsx":"11","C:\\itless\\pathofsamurai\\src\\Rdux\\profile-reducer.tsx":"12","C:\\itless\\pathofsamurai\\src\\Rdux\\sidebar-reducer.tsx":"13","C:\\itless\\pathofsamurai\\src\\Rdux\\users-reducer.tsx":"14","C:\\itless\\pathofsamurai\\src\\components\\Dialogs\\Dialogs.tsx":"15","C:\\itless\\pathofsamurai\\src\\HOC\\WithAuthRedirect.tsx":"16","C:\\itless\\pathofsamurai\\src\\components\\News\\News.tsx":"17","C:\\itless\\pathofsamurai\\src\\components\\Profile\\ProfileContentContainerAPI.tsx":"18","C:\\itless\\pathofsamurai\\src\\components\\Settings\\Settings.tsx":"19","C:\\itless\\pathofsamurai\\src\\components\\Login\\Login.tsx":"20","C:\\itless\\pathofsamurai\\src\\components\\Music\\Music.tsx":"21","C:\\itless\\pathofsamurai\\src\\components\\Users\\UsersPage.tsx":"22","C:\\itless\\pathofsamurai\\src\\components\\common\\Page404\\Page404.tsx":"23","C:\\itless\\pathofsamurai\\src\\API\\api-types.ts":"24","C:\\itless\\pathofsamurai\\src\\API\\users-api.ts":"25","C:\\itless\\pathofsamurai\\src\\utils\\validators\\validators.ts":"26","C:\\itless\\pathofsamurai\\src\\components\\Profile\\profile-selectors.ts":"27","C:\\itless\\pathofsamurai\\src\\utils\\object-helpers\\object-helpers.tsx":"28","C:\\itless\\pathofsamurai\\src\\components\\common\\FormControls\\FormControls.tsx":"29","C:\\itless\\pathofsamurai\\src\\components\\Users\\Users.tsx":"30","C:\\itless\\pathofsamurai\\src\\Rdux\\users-selectors.tsx":"31","C:\\itless\\pathofsamurai\\src\\components\\Profile\\ProfileContent.tsx":"32","C:\\itless\\pathofsamurai\\src\\components\\Login\\LoginForm.tsx":"33","C:\\itless\\pathofsamurai\\src\\components\\Dialogs\\DialogItem\\DialogItem.tsx":"34","C:\\itless\\pathofsamurai\\src\\API\\instance-api.ts":"35","C:\\itless\\pathofsamurai\\src\\components\\Users\\User\\UserSearchForm.tsx":"36","C:\\itless\\pathofsamurai\\src\\components\\Profile\\ProfileInfo\\ProfileInfo.tsx":"37","C:\\itless\\pathofsamurai\\src\\components\\Profile\\MyPosts\\MyPostsContainer.tsx":"38","C:\\itless\\pathofsamurai\\src\\components\\Users\\User\\User.tsx":"39","C:\\itless\\pathofsamurai\\src\\components\\common\\Paginator\\Paginator.tsx":"40","C:\\itless\\pathofsamurai\\src\\components\\Profile\\ProfileInfo\\ProfileData\\ProfileData.tsx":"41","C:\\itless\\pathofsamurai\\src\\components\\Profile\\MyPosts\\MyPosts.tsx":"42","C:\\itless\\pathofsamurai\\src\\components\\Profile\\ProfileInfo\\ProfileDataForm\\ProfileDataForm.tsx":"43","C:\\itless\\pathofsamurai\\src\\components\\Profile\\ProfileInfo\\ProfileStatus\\ProfileStatusHooks.tsx":"44","C:\\itless\\pathofsamurai\\src\\components\\Profile\\MyPosts\\Post\\Post.tsx":"45","C:\\itless\\pathofsamurai\\src\\API\\security-api.ts":"46","C:\\itless\\pathofsamurai\\src\\API\\auth-api.ts":"47","C:\\itless\\pathofsamurai\\src\\API\\profile-api.ts":"48","C:\\itless\\pathofsamurai\\src\\components\\Dialogs\\Message\\Message.tsx":"49","C:\\itless\\pathofsamurai\\src\\components\\Header\\Header.tsx":"50","C:\\itless\\pathofsamurai\\src\\components\\Header\\header-selectors.ts":"51","C:\\itless\\pathofsamurai\\src\\components\\chat\\ChatPage.tsx":"52"},{"size":397,"mtime":1609862280832,"results":"53","hashOfConfig":"54"},{"size":3586,"mtime":1609937642437,"results":"55","hashOfConfig":"54"},{"size":1087,"mtime":1609605921643,"results":"56","hashOfConfig":"54"},{"size":1031,"mtime":1609694589212,"results":"57","hashOfConfig":"54"},{"size":274,"mtime":1609605921643,"results":"58","hashOfConfig":"54"},{"size":2364,"mtime":1609937589284,"results":"59","hashOfConfig":"54"},{"size":821,"mtime":1609605921651,"results":"60","hashOfConfig":"54"},{"size":1873,"mtime":1609937998551,"results":"61","hashOfConfig":"54"},{"size":657,"mtime":1609763941371,"results":"62","hashOfConfig":"54"},{"size":3577,"mtime":1609768716730,"results":"63","hashOfConfig":"54"},{"size":1414,"mtime":1609605921644,"results":"64","hashOfConfig":"54"},{"size":4823,"mtime":1609849597237,"results":"65","hashOfConfig":"54"},{"size":157,"mtime":1601129789288,"results":"66","hashOfConfig":"54"},{"size":5212,"mtime":1609773779492,"results":"67","hashOfConfig":"54"},{"size":2380,"mtime":1609605921650,"results":"68","hashOfConfig":"54"},{"size":873,"mtime":1609605921642,"results":"69","hashOfConfig":"54"},{"size":159,"mtime":1601129789295,"results":"70","hashOfConfig":"54"},{"size":4134,"mtime":1609866667019,"results":"71","hashOfConfig":"54"},{"size":147,"mtime":1601129789300,"results":"72","hashOfConfig":"54"},{"size":219,"mtime":1609605921653,"results":"73","hashOfConfig":"54"},{"size":143,"mtime":1601129789293,"results":"74","hashOfConfig":"54"},{"size":550,"mtime":1609842825647,"results":"75","hashOfConfig":"54"},{"size":301,"mtime":1609861373463,"results":"76","hashOfConfig":"54"},{"size":590,"mtime":1609605921632,"results":"77","hashOfConfig":"54"},{"size":863,"mtime":1609773876367,"results":"78","hashOfConfig":"54"},{"size":382,"mtime":1609605921672,"results":"79","hashOfConfig":"54"},{"size":544,"mtime":1609848621593,"results":"80","hashOfConfig":"54"},{"size":262,"mtime":1609605921672,"results":"81","hashOfConfig":"54"},{"size":1834,"mtime":1609605921669,"results":"82","hashOfConfig":"54"},{"size":3626,"mtime":1609857391512,"results":"83","hashOfConfig":"54"},{"size":1141,"mtime":1609842825636,"results":"84","hashOfConfig":"54"},{"size":1323,"mtime":1609866666984,"results":"85","hashOfConfig":"54"},{"size":4683,"mtime":1609847569048,"results":"86","hashOfConfig":"54"},{"size":431,"mtime":1609605921649,"results":"87","hashOfConfig":"54"},{"size":248,"mtime":1609605921633,"results":"88","hashOfConfig":"54"},{"size":2060,"mtime":1609847683003,"results":"89","hashOfConfig":"54"},{"size":2110,"mtime":1609763639222,"results":"90","hashOfConfig":"54"},{"size":574,"mtime":1609605921656,"results":"91","hashOfConfig":"54"},{"size":2337,"mtime":1609844339234,"results":"92","hashOfConfig":"54"},{"size":1767,"mtime":1609842825651,"results":"93","hashOfConfig":"54"},{"size":1568,"mtime":1609605921660,"results":"94","hashOfConfig":"54"},{"size":2552,"mtime":1609866667030,"results":"95","hashOfConfig":"54"},{"size":2148,"mtime":1609605921661,"results":"96","hashOfConfig":"54"},{"size":1184,"mtime":1609605921663,"results":"97","hashOfConfig":"54"},{"size":1416,"mtime":1609866666970,"results":"98","hashOfConfig":"54"},{"size":185,"mtime":1609605921639,"results":"99","hashOfConfig":"54"},{"size":707,"mtime":1609605921633,"results":"100","hashOfConfig":"54"},{"size":1179,"mtime":1609605921639,"results":"101","hashOfConfig":"54"},{"size":280,"mtime":1609605921651,"results":"102","hashOfConfig":"54"},{"size":926,"mtime":1609934633600,"results":"103","hashOfConfig":"54"},{"size":163,"mtime":1609862374089,"results":"104","hashOfConfig":"54"},{"size":1618,"mtime":1609941511285,"results":"105","hashOfConfig":"54"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},"1yucu63",{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"123","messages":"124","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"108"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"108"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"108"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"108"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183","usedDeprecatedRules":"108"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\itless\\pathofsamurai\\src\\index.tsx",[],["216","217"],"C:\\itless\\pathofsamurai\\src\\App.tsx",[],"C:\\itless\\pathofsamurai\\src\\Rdux\\app-reducer.tsx",[],"C:\\itless\\pathofsamurai\\src\\Rdux\\redux-store.tsx",[],"C:\\itless\\pathofsamurai\\src\\HOC\\withSuspense.tsx",[],"C:\\itless\\pathofsamurai\\src\\components\\Nav\\Nav.tsx",[],"C:\\itless\\pathofsamurai\\src\\components\\Dialogs\\DialogsContainer.tsx",[],"C:\\itless\\pathofsamurai\\src\\components\\common\\routes\\Routes.tsx",[],"C:\\itless\\pathofsamurai\\src\\components\\common\\preLoader\\preLoader.tsx",["218","219","220"],"import {Field, Form, Formik} from 'formik';\r\nimport React from 'react';\r\nimport st from './preLoader.module.css';\r\n\r\n\r\nconst PreLoader: React.FC = () => {\r\n    return <div className={st.loader}>\r\n        <div className={st.l_main}>\r\n            <div className={st.l_square}><span></span><span></span><span></span></div>\r\n            <div className={st.l_square}><span></span><span></span><span></span></div>\r\n            <div className={st.l_square}><span></span><span></span><span></span></div>\r\n            <div className={st.l_square}><span></span><span></span><span></span></div>\r\n\r\n        </div>\r\n    </div>;\r\n\r\n};\r\n\r\n\r\n\r\n\r\nexport default PreLoader;\r\n","C:\\itless\\pathofsamurai\\src\\Rdux\\auth-reducer.tsx",[],"C:\\itless\\pathofsamurai\\src\\Rdux\\dialogs-reducer.tsx",[],"C:\\itless\\pathofsamurai\\src\\Rdux\\profile-reducer.tsx",[],"C:\\itless\\pathofsamurai\\src\\Rdux\\sidebar-reducer.tsx",[],"C:\\itless\\pathofsamurai\\src\\Rdux\\users-reducer.tsx",[],"C:\\itless\\pathofsamurai\\src\\components\\Dialogs\\Dialogs.tsx",[],"C:\\itless\\pathofsamurai\\src\\HOC\\WithAuthRedirect.tsx",[],"C:\\itless\\pathofsamurai\\src\\components\\News\\News.tsx",[],"C:\\itless\\pathofsamurai\\src\\components\\Profile\\ProfileContentContainerAPI.tsx",["221","222","223","224","225","226","227","228","229","230"],"import React, {useCallback, useEffect} from 'react';\r\nimport '../../App.module.css';\r\nimport {connect, useDispatch, useSelector} from 'react-redux';\r\nimport {getUserProfile, getUserStatus, savePhoto, saveProfile, updateUserStatus} from '../../Rdux/profile-reducer';\r\nimport {RouteComponentProps, useParams, withRouter} from 'react-router-dom';\r\nimport {compose} from 'redux';\r\nimport {AppRootStateType} from '../../Rdux/redux-store';\r\nimport {NewProfileType} from '../../Types/Types';\r\nimport {Profile} from './ProfileContent';\r\nimport {getIsAuth, getProfile, getStatus, getUserId} from './profile-selectors';\r\nimport {withAuthRedirect} from '../../HOC/WithAuthRedirect';\r\n\r\n\r\ntype MapPropsType = ReturnType<typeof mapStateToProps>\r\ntype DispatchPropsType = {\r\n    getUserProfile: (userId: number | null) => void\r\n    getUserStatus: (userId: number | null) => void\r\n    updateUserStatus: (status: string) => void\r\n    savePhoto: (file: File) => void\r\n    saveProfile: (profile: NewProfileType) => Promise<any>\r\n}\r\n\r\ntype PathParamsType = {\r\n    userId: string\r\n\r\n}\r\n\r\n\r\ntype PropsType = MapPropsType & DispatchPropsType & RouteComponentProps<PathParamsType>;\r\n\r\ntype HooksType = {}\r\nconst ProfileHooks: React.FC<HooksType> = (props) => {\r\n    const {id} = useParams<{ id: string }>()\r\n    const dispatch = useDispatch();\r\n    const profile = useSelector(getProfile)\r\n    const status = useSelector(getStatus)\r\n    const isAuth = useSelector(getIsAuth)\r\n    const authorizedUserId = useSelector(getUserId)\r\n\r\n    const getUserProfile = useCallback((userId: number | null) => {\r\n        dispatch(getUserProfile(userId))\r\n    }, [dispatch])\r\n    const getUserStatus = useCallback((userId: number | null) => {\r\n        dispatch(getUserStatus(userId))\r\n    }, [dispatch])\r\n    const updateUserStatus = useCallback((status: string) => {\r\n        dispatch(updateUserStatus(status))\r\n    }, [dispatch])\r\n    const savePhoto = useCallback((photo: File) => {\r\n        dispatch(savePhoto(photo))\r\n    }, [])\r\n    const saveProfile = useCallback(async (profile: NewProfileType): Promise<any> => {\r\n        await dispatch(saveProfile(profile))\r\n    }, [])\r\n\r\n\r\n    useEffect(() => {\r\n    }, [])\r\n\r\n\r\n    return (\r\n        <div>\r\n\r\n\r\n        </div>);\r\n\r\n}\r\n\r\n\r\nclass ProfileContentContainerAPI extends React.Component<PropsType> {\r\n    constructor(props: PropsType) {\r\n        super(props);\r\n    }\r\n\r\n    refreshProfile() {\r\n        let userId: number | null = +this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n            if (!userId) {\r\n                this.props.history.push('/login');\r\n            }\r\n        }\r\n\r\n        if (!userId) {\r\n            console.error('ID should exists in URI params or in state (\\'authorizedUserId\\')');\r\n        } else {\r\n            this.props.getUserProfile(userId);\r\n            this.props.getUserStatus(userId);\r\n        }\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n\r\n        this.refreshProfile();\r\n    }\r\n\r\n    componentDidUpdate(prevProps: PropsType, prevState: PropsType) {\r\n        if (this.props.match.params.userId != prevProps.match.params.userId) {\r\n            this.refreshProfile();\r\n        }\r\n\r\n    }\r\n\r\n    componentWillUnmount(): void {\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Profile\r\n                    {...this.props}\r\n                    isOwner={!this.props.match.params.userId}\r\n                    profile={this.props.profile}\r\n                    status={this.props.status}\r\n                    updateStatus={this.props.updateUserStatus}\r\n                />\r\n\r\n            </div>);\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state: AppRootStateType) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    isAuth: state.auth.isAuth,\r\n    authorizedUserId: state.auth.userId,\r\n\r\n\r\n});\r\n\r\n\r\nexport default compose<React.ComponentType>(\r\n    connect(mapStateToProps, {\r\n        getUserProfile,\r\n        getUserStatus,\r\n        updateUserStatus,\r\n        savePhoto,\r\n        saveProfile\r\n    }),\r\n    withRouter,\r\n    withAuthRedirect\r\n)(ProfileContentContainerAPI);\r\n\r\n\r\n","C:\\itless\\pathofsamurai\\src\\components\\Settings\\Settings.tsx",[],"C:\\itless\\pathofsamurai\\src\\components\\Login\\Login.tsx",[],"C:\\itless\\pathofsamurai\\src\\components\\Music\\Music.tsx",[],"C:\\itless\\pathofsamurai\\src\\components\\Users\\UsersPage.tsx",[],"C:\\itless\\pathofsamurai\\src\\components\\common\\Page404\\Page404.tsx",[],"C:\\itless\\pathofsamurai\\src\\API\\api-types.ts",[],"C:\\itless\\pathofsamurai\\src\\API\\users-api.ts",[],"C:\\itless\\pathofsamurai\\src\\utils\\validators\\validators.ts",[],"C:\\itless\\pathofsamurai\\src\\components\\Profile\\profile-selectors.ts",[],"C:\\itless\\pathofsamurai\\src\\utils\\object-helpers\\object-helpers.tsx",[],"C:\\itless\\pathofsamurai\\src\\components\\common\\FormControls\\FormControls.tsx",[],"C:\\itless\\pathofsamurai\\src\\components\\Users\\Users.tsx",["231","232","233","234"],"import React, {useCallback, useEffect} from 'react';\r\nimport {userType} from '../../Types/Types';\r\nimport Paginator from '../common/Paginator/Paginator';\r\nimport User from './User/User';\r\nimport {FilterType, followTC, getUsersTC, unfollowTC} from '../../Rdux/users-reducer';\r\nimport {UserSearchForm} from './User/UserSearchForm';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {\r\n    getCurrentPage,\r\n    getFollowingInProgress,\r\n    getPageSize,\r\n    getTotalUsers,\r\n    getUsers,\r\n    getUsersFilter\r\n} from '../../Rdux/users-selectors';\r\nimport {useHistory} from 'react-router-dom';\r\nimport * as queryString from 'querystring';\r\n\r\n\r\ntype PropsType = {}\r\ntype QueryParamsType = { term?: string; page?: string; friend?: string }\r\nexport const Users: React.FC<PropsType> = (props) => {\r\n    const dispatch = useDispatch();\r\n    const totalUsersCount = useSelector(getTotalUsers);\r\n    const currentPage = useSelector(getCurrentPage);\r\n    const pageSize = useSelector(getPageSize);\r\n    const followingInProgress = useSelector(getFollowingInProgress);\r\n    const users = useSelector(getUsers);\r\n    const filter = useSelector(getUsersFilter);\r\n\r\n    const history = useHistory()\r\n    useEffect(() => {\r\n        const parsed = queryString.parse(history.location.search.substr(1)) as QueryParamsType\r\n\r\n        let actualPage = currentPage\r\n        let actualFilter = filter\r\n\r\n        if (!!parsed.page) actualPage = Number(parsed.page)\r\n\r\n\r\n        if (!!parsed.term) actualFilter = {...actualFilter, term: parsed.term as string}\r\n\r\n        switch (parsed.friend) {\r\n            case 'null':\r\n                actualFilter = {...actualFilter, friend: null}\r\n                break;\r\n            case 'true':\r\n                actualFilter = {...actualFilter, friend: true}\r\n                break;\r\n            case 'false':\r\n                actualFilter = {...actualFilter, friend: false}\r\n                break;\r\n        }\r\n\r\n        dispatch(getUsersTC(actualPage, pageSize, actualFilter))\r\n    }, [])\r\n    useEffect(() => {\r\n        const query: QueryParamsType = {}\r\n\r\n        if (!!filter.term) query.term = filter.term\r\n        if (filter.friend !== null) query.friend = String(filter.friend)\r\n        if (currentPage !== 1) query.page = String(currentPage)\r\n\r\n        history.push({\r\n            pathname: '/users',\r\n            search: queryString.stringify(query)\r\n        })\r\n    }, [filter, currentPage])\r\n\r\n    const onPageChanged = useCallback((pageNumber: number) => {\r\n        dispatch(getUsersTC(pageNumber, pageSize, filter));\r\n        console.log('onPageChanged')\r\n    }, [dispatch]);\r\n\r\n    const onFilterChanged = useCallback((filter: FilterType) => {\r\n        dispatch(getUsersTC(1, pageSize, filter));\r\n        console.log('onFilterChanged')\r\n    }, [dispatch]);\r\n\r\n    const follow = useCallback((userId: number) => {\r\n        dispatch(followTC(userId));\r\n        console.log('follow')\r\n    }, [dispatch]);\r\n\r\n    const unfollow = useCallback((userId: number) => {\r\n        dispatch(unfollowTC(userId));\r\n        console.log('unfollow')\r\n    }, [dispatch]);\r\n\r\n    return (\r\n        <div>\r\n            <UserSearchForm onFilterChanged={onFilterChanged}/>\r\n            <Paginator currentPage={currentPage} onPageChanged={onPageChanged} pageSize={pageSize}\r\n                       totalUsersCount={totalUsersCount}/>\r\n            {users.map((user: userType) => <User\r\n                unfollowTC={unfollow}\r\n                followTC={follow}\r\n                followingInProgress={followingInProgress}\r\n                user={user}\r\n                key={user.id}/>)}\r\n\r\n        </div>);\r\n};\r\n\r\n\r\n","C:\\itless\\pathofsamurai\\src\\Rdux\\users-selectors.tsx",[],"C:\\itless\\pathofsamurai\\src\\components\\Profile\\ProfileContent.tsx",[],"C:\\itless\\pathofsamurai\\src\\components\\Login\\LoginForm.tsx",["235"],"import React from 'react';\r\nimport {\r\n    Button,\r\n    Checkbox,\r\n    FormControl,\r\n    FormControlLabel,\r\n    FormGroup,\r\n    FormLabel,\r\n    Grid,\r\n    TextField\r\n} from '@material-ui/core';\r\nimport {useFormik} from 'formik';\r\nimport {loginTC} from '../../Rdux/auth-reducer';\r\nimport {connect} from 'react-redux';\r\nimport {AppRootStateType} from '../../Rdux/redux-store';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {LoginParamsType} from '../../API/api-types';\r\n\r\n// TODO сделать проверку правильности пароля\r\n\r\ntype LoginFormType = {\r\n    loginTC: (data: LoginParamsType) => Promise<any>\r\n    isCorrect: boolean\r\n    isAuth: boolean\r\n    captchaUrl: string | null\r\n}\r\n\r\n\r\nconst LoginForm: React.FC<LoginFormType> = ({isAuth, isCorrect, loginTC, captchaUrl}) => {\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            email: '',\r\n            password: '',\r\n            rememberMe: false,\r\n            isCorrect: isCorrect,\r\n            confirm: ''\r\n        }, validate(values: FormikType) {\r\n            const errors: FormikType = {};\r\n\r\n            if (!values.email) {\r\n                errors.email = 'Required';\r\n            } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\r\n                errors.email = 'Invalid email address';\r\n            }\r\n            if (!values.password) {\r\n                errors.password = 'Required';\r\n            } else if (values.password.length < 5) {\r\n                errors.password = 'Must be 5 characters or more';\r\n            }\r\n            if (!values.isCorrect) {\r\n                errors.confirm = 'Incorrect email or password';\r\n            }\r\n\r\n            return errors;\r\n        },\r\n\r\n        onSubmit: async (values) => {\r\n            await loginTC(values);\r\n\r\n        },\r\n    });\r\n    // useEffect(() => {\r\n    //     !isCorrect && formik.setErrors({confirm: 'Incorrect email or password'});\r\n    // }, [isCorrect]);\r\n    if (isAuth) {\r\n        return <Redirect to={'/profile'}/>;\r\n    }\r\n    //TODO доделать отправку капчи\r\n    return <form onSubmit={formik.handleSubmit}>\r\n        <Grid container justify=\"center\">\r\n            <Grid item xs={4}>\r\n                <FormControl>\r\n                    <FormLabel>\r\n                        <p>To log in get registered\r\n                            <a href={'https://social-network.samuraijs.com/'}\r\n                               target={'_blank'}>here\r\n                            </a>\r\n                        </p>\r\n                        <p>or use common test account credentials:</p>\r\n                        <p>Email: free@samuraijs.com</p>\r\n                        <p>Password: free</p>\r\n                    </FormLabel>\r\n                    <FormGroup>\r\n                        <TextField\r\n                            label=\"Email\"\r\n                            margin=\"normal\"\r\n                            {...formik.getFieldProps('email')}\r\n                        />{\r\n                        formik.errors.email ? <div style={{color: 'red'}}>{formik.errors.email}</div> : null\r\n                    }\r\n                        <TextField\r\n                            type=\"password\"\r\n                            label=\"Password\"\r\n                            margin=\"normal\"\r\n                            {...formik.getFieldProps('password')}\r\n                        />{\r\n                        formik.errors.password ? <div style={{color: 'red'}}>{formik.errors.password}</div> : null\r\n                    }\r\n\r\n                        {\r\n                            formik.errors.confirm ? <div style={{color: 'red'}}>{formik.errors.confirm}</div> : null\r\n                        }\r\n                        <FormControlLabel\r\n                            label={'Remember me'}\r\n                            control={<Checkbox/>}\r\n                            {...formik.getFieldProps('rememberMe')}\r\n                        />\r\n                        <Button type={'submit'} variant={'contained'} color={'primary'}>Login</Button>\r\n                    </FormGroup>\r\n                </FormControl>\r\n            </Grid>\r\n        </Grid>\r\n    </form>;\r\n\r\n\r\n};\r\n\r\n\r\nconst mapStateToProps = (state: AppRootStateType): MapStatePropsType => ({\r\n    isAuth: state.auth.isAuth,\r\n    isCorrect: state.auth.isCorrect,\r\n    captchaUrl: state.auth.captchaUrl\r\n\r\n});\r\ntype MapStatePropsType = {\r\n    isAuth: boolean\r\n    isCorrect: boolean\r\n    captchaUrl: string | null\r\n\r\n}\r\ntype FormikType = {\r\n    email?: string\r\n    password?: string\r\n    rememberMe?: boolean\r\n    isCorrect?: boolean\r\n    confirm?: string\r\n}\r\nexport default connect(mapStateToProps, {loginTC})(LoginForm);\r\n","C:\\itless\\pathofsamurai\\src\\components\\Dialogs\\DialogItem\\DialogItem.tsx",[],"C:\\itless\\pathofsamurai\\src\\API\\instance-api.ts",[],"C:\\itless\\pathofsamurai\\src\\components\\Users\\User\\UserSearchForm.tsx",["236","237"],"import {Field, Form, Formik} from 'formik';\r\nimport React from 'react';\r\nimport {FilterType, getUsersTC} from '../../../Rdux/users-reducer';\r\nimport {useSelector} from 'react-redux';\r\nimport {getUsers, getUsersFilter} from '../../../Rdux/users-selectors';\r\n\r\ntype FriendFormType = 'true' | 'false' | 'null'\r\n\r\ntype FormType = {\r\n    term: string\r\n    friend: 'true' | 'false' | 'null'\r\n}\r\ntype PropsType = {\r\n    onFilterChanged: (filter: FilterType) => void\r\n}\r\n\r\nconst usersSearchFormValidate = (values: any) => {\r\n    const errors = {};\r\n    return errors\r\n}\r\n\r\nexport const UserSearchForm: React.FC<PropsType> = React.memo(({onFilterChanged}) => {\r\n\r\n    const filter = useSelector(getUsersFilter)\r\n    const submit = (values: FormType, {setSubmitting}: { setSubmitting: (isSubmitting: boolean) => void }) => {\r\n        const filter: FilterType = {\r\n            term: values.term,\r\n            friend: values.friend === 'null' ? null : values.friend === 'true' ? true : false\r\n        }\r\n        onFilterChanged(filter)\r\n\r\n        setSubmitting(false)\r\n    }\r\n    return <div>\r\n        <Formik\r\n            initialValues={{term: filter.term, friend: String(filter.friend) as FriendFormType}}\r\n            validate={usersSearchFormValidate}\r\n            onSubmit={submit}\r\n        >\r\n            {({isSubmitting}) => (\r\n                <Form>\r\n                    <Field\r\n                        id=\"term\"\r\n                        name=\"term\"\r\n                        type=\"text\"\r\n                    />\r\n                    <Field\r\n                        component=\"select\"\r\n                        id=\"location\"\r\n                        name=\"friend\"\r\n\r\n                    >\r\n                        <option value=\"null\">All</option>\r\n                        <option value=\"true\">Only followed</option>\r\n                        <option value=\"false\">Only unfollowed</option>\r\n                    </Field>\r\n                    <button type=\"submit\" disabled={isSubmitting}>Submit</button>\r\n                </Form>)}\r\n        </Formik>\r\n    </div>\r\n})\r\n\r\n","C:\\itless\\pathofsamurai\\src\\components\\Profile\\ProfileInfo\\ProfileInfo.tsx",[],"C:\\itless\\pathofsamurai\\src\\components\\Profile\\MyPosts\\MyPostsContainer.tsx",[],"C:\\itless\\pathofsamurai\\src\\components\\Users\\User\\User.tsx",[],"C:\\itless\\pathofsamurai\\src\\components\\common\\Paginator\\Paginator.tsx",[],"C:\\itless\\pathofsamurai\\src\\components\\Profile\\ProfileInfo\\ProfileData\\ProfileData.tsx",[],"C:\\itless\\pathofsamurai\\src\\components\\Profile\\MyPosts\\MyPosts.tsx",[],"C:\\itless\\pathofsamurai\\src\\components\\Profile\\ProfileInfo\\ProfileDataForm\\ProfileDataForm.tsx",[],"C:\\itless\\pathofsamurai\\src\\components\\Profile\\ProfileInfo\\ProfileStatus\\ProfileStatusHooks.tsx",[],"C:\\itless\\pathofsamurai\\src\\components\\Profile\\MyPosts\\Post\\Post.tsx",[],"C:\\itless\\pathofsamurai\\src\\API\\security-api.ts",[],"C:\\itless\\pathofsamurai\\src\\API\\auth-api.ts",[],"C:\\itless\\pathofsamurai\\src\\API\\profile-api.ts",[],"C:\\itless\\pathofsamurai\\src\\components\\Dialogs\\Message\\Message.tsx",[],"C:\\itless\\pathofsamurai\\src\\components\\Header\\Header.tsx",[],"C:\\itless\\pathofsamurai\\src\\components\\Header\\header-selectors.ts",[],"C:\\itless\\pathofsamurai\\src\\components\\chat\\ChatPage.tsx",[],{"ruleId":"238","replacedBy":"239"},{"ruleId":"240","replacedBy":"241"},{"ruleId":"242","severity":1,"message":"243","line":1,"column":9,"nodeType":"244","messageId":"245","endLine":1,"endColumn":14},{"ruleId":"242","severity":1,"message":"246","line":1,"column":16,"nodeType":"244","messageId":"245","endLine":1,"endColumn":20},{"ruleId":"242","severity":1,"message":"247","line":1,"column":22,"nodeType":"244","messageId":"245","endLine":1,"endColumn":28},{"ruleId":"242","severity":1,"message":"248","line":32,"column":7,"nodeType":"244","messageId":"245","endLine":32,"endColumn":40},{"ruleId":"242","severity":1,"message":"249","line":33,"column":12,"nodeType":"244","messageId":"245","endLine":33,"endColumn":14},{"ruleId":"242","severity":1,"message":"250","line":35,"column":11,"nodeType":"244","messageId":"245","endLine":35,"endColumn":18},{"ruleId":"242","severity":1,"message":"251","line":36,"column":11,"nodeType":"244","messageId":"245","endLine":36,"endColumn":17},{"ruleId":"242","severity":1,"message":"252","line":37,"column":11,"nodeType":"244","messageId":"245","endLine":37,"endColumn":17},{"ruleId":"242","severity":1,"message":"253","line":38,"column":11,"nodeType":"244","messageId":"245","endLine":38,"endColumn":27},{"ruleId":"254","severity":1,"message":"255","line":51,"column":8,"nodeType":"256","endLine":51,"endColumn":10,"suggestions":"257"},{"ruleId":"254","severity":1,"message":"255","line":54,"column":8,"nodeType":"256","endLine":54,"endColumn":10,"suggestions":"258"},{"ruleId":"259","severity":1,"message":"260","line":71,"column":5,"nodeType":"261","messageId":"262","endLine":73,"endColumn":6},{"ruleId":"263","severity":1,"message":"264","line":99,"column":44,"nodeType":"265","messageId":"266","endLine":99,"endColumn":46},{"ruleId":"254","severity":1,"message":"267","line":56,"column":8,"nodeType":"256","endLine":56,"endColumn":10,"suggestions":"268"},{"ruleId":"254","severity":1,"message":"269","line":68,"column":8,"nodeType":"256","endLine":68,"endColumn":29,"suggestions":"270"},{"ruleId":"254","severity":1,"message":"271","line":73,"column":8,"nodeType":"256","endLine":73,"endColumn":18,"suggestions":"272"},{"ruleId":"254","severity":1,"message":"273","line":78,"column":8,"nodeType":"256","endLine":78,"endColumn":18,"suggestions":"274"},{"ruleId":"275","severity":1,"message":"276","line":76,"column":29,"nodeType":"277","endLine":77,"endColumn":50},{"ruleId":"242","severity":1,"message":"278","line":3,"column":21,"nodeType":"244","messageId":"245","endLine":3,"endColumn":31},{"ruleId":"242","severity":1,"message":"279","line":5,"column":9,"nodeType":"244","messageId":"245","endLine":5,"endColumn":17},"no-native-reassign",["280"],"no-negated-in-lhs",["281"],"@typescript-eslint/no-unused-vars","'Field' is defined but never used.","Identifier","unusedVar","'Form' is defined but never used.","'Formik' is defined but never used.","'ProfileHooks' is assigned a value but never used.","'id' is assigned a value but never used.","'profile' is assigned a value but never used.","'status' is assigned a value but never used.","'isAuth' is assigned a value but never used.","'authorizedUserId' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useCallback has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["282"],["283"],"@typescript-eslint/no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","React Hook useEffect has missing dependencies: 'currentPage', 'dispatch', 'filter', 'history.location.search', and 'pageSize'. Either include them or remove the dependency array.",["284"],"React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["285"],"React Hook useCallback has missing dependencies: 'filter' and 'pageSize'. Either include them or remove the dependency array.",["286"],"React Hook useCallback has a missing dependency: 'pageSize'. Either include it or remove the dependency array.",["287"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement","'getUsersTC' is defined but never used.","'getUsers' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"288","fix":"289"},{"desc":"288","fix":"290"},{"desc":"291","fix":"292"},{"desc":"293","fix":"294"},{"desc":"295","fix":"296"},{"desc":"297","fix":"298"},"Update the dependencies array to be: [dispatch]",{"range":"299","text":"300"},{"range":"301","text":"300"},"Update the dependencies array to be: [currentPage, dispatch, filter, history.location.search, pageSize]",{"range":"302","text":"303"},"Update the dependencies array to be: [filter, currentPage, history]",{"range":"304","text":"305"},"Update the dependencies array to be: [dispatch, filter, pageSize]",{"range":"306","text":"307"},"Update the dependencies array to be: [dispatch, pageSize]",{"range":"308","text":"309"},[1993,1995],"[dispatch]",[2139,2141],[2013,2015],"[currentPage, dispatch, filter, history.location.search, pageSize]",[2406,2427],"[filter, currentPage, history]",[2603,2613],"[dispatch, filter, pageSize]",[2785,2795],"[dispatch, pageSize]"]